{"version":3,"file":"static/js/11.e02061f5.chunk.js","mappings":"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","sources":["reducers/cards-logic.tsx","components/FlashCards/CardsCarousel/cards-carousel.styles.ts","components/FlashCards/CardsCarousel/CardSide/card-side.styles.ts","components/FlashCards/CardsCarousel/CardSide/card-side.tsx","components/FlashCards/CardsCarousel/cards-carousel.tsx","components/FlashCards/CardsFooter/cards-footer.styles.ts","components/FlashCards/CardsFooter/cards-footer.tsx","components/FlashCards/flash-cards.styles.ts","components/FlashCards/flash-cards.tsx"],"sourcesContent":["enum Animation {\r\n  prev = \"prev\",\r\n  next = \"next\",\r\n  flip = \"flip\"\r\n}\r\n\r\nexport type CardsLogicAction =\r\n  | { type: \"TOGGLE_SIDE\" }\r\n  | { type: \"NEXT_CARD\" }\r\n  | { type: \"PREV_CARD\" }\r\n  | { type: \"FLIP_SIDE\" }\r\n\r\nexport interface CardsLogicState {\r\n  animation: Animation,\r\n  animate: boolean,\r\n  isTermSide: boolean,\r\n  keyChange: boolean,\r\n}\r\n\r\nexport const initialState: CardsLogicState = {\r\n  animation: Animation.flip,\r\n  animate: false,\r\n  isTermSide: true,\r\n  keyChange: false,\r\n}\r\n\r\nexport function cardsLogicReducer(\r\n  state: CardsLogicState,\r\n  action: CardsLogicAction\r\n): CardsLogicState {\r\n  switch (action.type) {\r\n    case \"TOGGLE_SIDE\":\r\n      return {\r\n        ...state,\r\n        animation: Animation.flip,\r\n        animate: true,\r\n        isTermSide: !state.isTermSide,\r\n        keyChange: !state.keyChange\r\n      };\r\n    case \"NEXT_CARD\":\r\n      return {\r\n        ...state,\r\n        animation: Animation.next,\r\n        animate: true,\r\n        keyChange: !state.keyChange,\r\n      }\r\n    case \"PREV_CARD\":\r\n      return {\r\n        ...state,\r\n        animation: Animation.prev,\r\n        animate: true,\r\n        keyChange: !state.keyChange,\r\n      }\r\n    case \"FLIP_SIDE\":\r\n      return {\r\n        ...state,\r\n        isTermSide: !state.isTermSide\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import styled, {keyframes} from \"styled-components\";\r\n\r\nexport const CardsCarouselWrap = styled.div`\r\n  display: grid;\r\n  grid-auto-rows: minmax(0,1fr);\r\n  grid-column: 1/1;\r\n  grid-row: 1/1;\r\n  -webkit-transform-style: preserve-3d;\r\n  -ms-transform-style: preserve-3d;\r\n  transform-style: preserve-3d;\r\n  z-index: 0;\r\n  &:focus-visible{\r\n    outline: none;\r\n  }\r\n`\r\nexport const CardsCarouselContainer = styled.div`\r\n  height: 100%;\r\n  -webkit-perspective: 62.5rem;\r\n  -moz-perspective: 62.5rem;\r\n  -ms-perspective: 62.5rem;\r\n  perspective: 62.5rem;\r\n  position: relative;\r\n  &:focus-visible{\r\n    outline: none;\r\n  }\r\n`\r\nconst flipAnim = keyframes`\r\n  50% {\r\n    transform: rotateX(180deg);\r\n  }\r\n  75% {\r\n    transform: rotateX(270deg);\r\n  }\r\n  100% {\r\n    transform: rotateX(360deg);\r\n  }\r\n`\r\nconst prevCardAnim = keyframes`\r\n  50% {\r\n    transform: rotateY(5deg);\r\n  }\r\n  75% {\r\n    transform: rotateY(10deg);\r\n  }\r\n  100% {\r\n    transform: rotateY(0);\r\n  }\r\n`\r\nconst nextCardAnim = keyframes`\r\n  50% {\r\n    transform: rotateY(-5deg);\r\n  }\r\n  75% {\r\n    transform: rotateY(-10deg);\r\n  }\r\n  100% {\r\n    transform: rotateY(0);\r\n  }\r\n`\r\nexport const GridContainer = styled.div<{ animate: boolean, animation: string }>`\r\n  display: grid;\r\n  grid-auto-rows: minmax(0,1fr);\r\n  -webkit-backface-visibility: hidden;\r\n  backface-visibility: hidden;\r\n  bottom: 0;\r\n  cursor: pointer;\r\n  height: 100%;\r\n  left: 0;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n  -webkit-animation: ${props => {\r\n  if (props.animation === \"prev\") return prevCardAnim;\r\n  else if (props.animation === \"next\") return nextCardAnim;\r\n  else return flipAnim;\r\n}} ${props => props.animation === \"flip\" ? \".35s\" : \".15s\"} ease-in-out 1;\r\n  animation: ${props => {\r\n  if (props.animation === \"prev\") return prevCardAnim;\r\n  else if (props.animation === \"next\") return nextCardAnim;\r\n  else return flipAnim;\r\n}} ${props => props.animation === \"flip\" ? \".35s\" : \".15s\"} ease-in-out 1;\r\n  -webkit-animation-fill-mode: forwards;\r\n  animation-fill-mode: forwards;\r\n  animation-play-state: ${props => props.animate ? \"active\" : \"paused\"};\r\n  &:focus-visible{\r\n    outline: none;\r\n  }\r\n`","import styled from \"styled-components\";\r\nimport colors from \"../../../../assets/colors\";\r\n\r\nexport const CardContainer = styled.div`\r\n  background-color: ${colors.whiteColor};\r\n  color: ${colors.gray600};\r\n  border-radius: 0.5rem;\r\n  box-shadow: 0 0.25rem 1rem 0 rgba(48, 53, 69, .08);\r\n  padding: 1.5rem 2rem;\r\n  display: grid;\r\n  gap: 1rem 0;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: auto 1fr auto;\r\n  @media (max-width: 64rem){\r\n    padding: 1.5rem 2rem;\r\n  }\r\n  @media (max-width: 48rem) {\r\n    padding: 1rem;\r\n  }\r\n  &:focus-visible{\r\n    outline: none;\r\n  }\r\n`\r\nexport const SavedIconButton = styled.button<{ isActive: boolean }>`\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  -webkit-box-pack: center;\r\n  -ms-flex-pack: center;\r\n  -webkit-align-items: center;\r\n  align-items: center;\r\n  border: none;\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  font: inherit;\r\n  -webkit-justify-content: center;\r\n  justify-content: center;\r\n  font-size: .875rem;\r\n  font-weight: 600;\r\n  -webkit-letter-spacing: normal;\r\n  -moz-letter-spacing: normal;\r\n  -ms-letter-spacing: normal;\r\n  letter-spacing: normal;\r\n  line-height: 1.4285714285714286;\r\n  min-height: 2rem;\r\n  border-radius: 50%;\r\n  padding: 0.375rem;\r\n  width: 2rem;\r\n  background: none;\r\n  &:hover {\r\n    background: ${colors.neurtal300};\r\n  }\r\n  color: ${props => props.isActive ? colors.yellowMain : colors.gray600};\r\n`\r\nexport const TermOrDefData = styled.div`\r\n  grid-column: 1/span 3;\r\n  grid-row: 2;\r\n  min-height: 0;\r\n  position: relative;\r\n`\r\nexport const TermOrDefDataContent = styled.div`\r\n  -webkit-box-align: stretch;\r\n  -ms-flex-align: stretch;\r\n  -webkit-box-pack: stretch;\r\n  -ms-flex-pack: stretch;\r\n  -webkit-align-items: stretch;\r\n  align-items: stretch;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex-direction: row;\r\n  -ms-flex-direction: row;\r\n  flex-direction: row;\r\n  gap: 3rem;\r\n  height: 100%;\r\n  -webkit-justify-content: stretch;\r\n  justify-content: stretch;\r\n  @media (max-width: 48rem) {\r\n    -webkit-flex-direction: column-reverse;\r\n    -ms-flex-direction: column-reverse;\r\n    flex-direction: column-reverse;\r\n    gap: 1.5rem;\r\n  }\r\n  >div {\r\n    -webkit-flex: 1;\r\n    -ms-flex: 1;\r\n    flex: 1;\r\n    height: 100%;\r\n    overflow: auto;\r\n    text-align: center;\r\n    @media (max-width: 48rem) {\r\n      -webkit-flex: 1.5;\r\n      -ms-flex: 1.5;\r\n      flex: 1.5;\r\n    }\r\n  }\r\n`\r\nexport const TextFormater = styled.div`\r\n  word-wrap: break-word;\r\n  position: relative;\r\n  word-break: break-word;\r\n  -webkit-font-smoothing: antialiased;\r\n  -ms-flex-pack: center;\r\n  min-height: 100%;\r\n  width: 100%;\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  -webkit-box-pack: center;\r\n  -webkit-align-items: center;\r\n  align-items: center;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-justify-content: center;\r\n  justify-content: center;\r\n  font-size: 32px;\r\n`\r\nexport const CarouselButtonsWrap = styled.div`\r\n  grid-column: 1/span 3;\r\n  grid-row: 3;\r\n`\r\nexport const CarouselButtonsContainer = styled.div`\r\n  -webkit-box-pack: space-around;\r\n  -ms-flex-pack: space-around;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  gap: 1.5rem;\r\n  -webkit-justify-content: space-around;\r\n  justify-content: space-around;\r\n  @media (max-width: 38.75rem){\r\n    -webkit-flex-direction: row;\r\n    -ms-flex-direction: row;\r\n    flex-direction: row;\r\n  }\r\n  @media (max-width: 48rem) {\r\n    gap: 1rem;\r\n  }\r\n`\r\nexport const NavButtonContainer = styled.div`\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  -webkit-box-pack: center;\r\n  -ms-flex-pack: center;\r\n  -webkit-align-items: center;\r\n  align-items: center;\r\n  border: 0.125rem solid ${colors.neurtal300};\r\n  border-radius: 0.5rem;\r\n  color: ${colors.UIColorGray};\r\n  cursor: pointer;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  font-size: 1rem;\r\n  font-weight: 400;\r\n  font-weight: 600;\r\n  -webkit-justify-content: center;\r\n  justify-content: center;\r\n  -webkit-letter-spacing: normal;\r\n  -moz-letter-spacing: normal;\r\n  -ms-letter-spacing: normal;\r\n  letter-spacing: normal;\r\n  line-height: 1.5;\r\n  margin-bottom: 1rem;\r\n  padding: 1rem;\r\n  position: relative;\r\n  width: 100%;\r\n  word-break: break-word;\r\n  :hover {\r\n    border-color: #939bb4;\r\n    outline: none;\r\n  }\r\n  @media (max-width: 38.75rem){\r\n    margin-bottom: 1rem;\r\n    max-height: 3rem;\r\n    max-width: 50%;\r\n  }\r\n  @media (max-width: 48rem) {\r\n    max-width: none;\r\n  }\r\n`\r\nexport const NavButtonSpan = styled.span`\r\n  color: ${colors.gray600};\r\n  margin: 0;\r\n  max-height: 1.25rem;\r\n  max-width: 1.25rem;\r\n`","import React, {FC} from 'react';\r\nimport {\r\n  CardContainer,\r\n  CarouselButtonsContainer,\r\n  CarouselButtonsWrap,\r\n  NavButtonContainer,\r\n  NavButtonSpan,\r\n  TermOrDefData,\r\n  TermOrDefDataContent,\r\n  TextFormater\r\n} from \"./card-side.styles\";\r\nimport {FaChevronLeft, FaChevronRight} from \"react-icons/fa\";\r\n\r\ninterface Props {\r\n  progressNumber: number,\r\n  isTerm: boolean,\r\n  value: string,\r\n  length: number,\r\n  toggleTermSide: () => void,\r\n  handleLeftButton: () => void,\r\n  handleRightButton: () => void\r\n}\r\n\r\nconst CardSide: FC<Props> = (props) => {\r\n  const {\r\n    progressNumber,\r\n    isTerm,\r\n    value,\r\n    length,\r\n    toggleTermSide,\r\n    handleLeftButton,\r\n    handleRightButton\r\n  } = props\r\n\r\n  return (\r\n    <CardContainer>\r\n      <div style={{\r\n        gridColumn: 1,\r\n        gridRow: 1,\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n      }}>{isTerm ? \"Term\" : \"Definition\"}</div>\r\n      <div style={{gridColumn: 2, gridRow: 1, display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n        {`${progressNumber + 1} / ${length}`}\r\n      </div>\r\n      <TermOrDefData onClick={toggleTermSide}>\r\n        <TermOrDefDataContent>\r\n          <div>\r\n            <TextFormater>\r\n              <div style={{color: \"black\"}}>{value}</div>\r\n            </TextFormater>\r\n          </div>\r\n        </TermOrDefDataContent>\r\n      </TermOrDefData>\r\n      <CarouselButtonsWrap>\r\n        <CarouselButtonsContainer>\r\n          <NavButtonContainer onClick={handleLeftButton}>\r\n            <NavButtonSpan>\r\n              <FaChevronLeft/>\r\n            </NavButtonSpan>\r\n          </NavButtonContainer>\r\n          <NavButtonContainer onClick={handleRightButton}>\r\n            <NavButtonSpan>\r\n              <FaChevronRight/>\r\n            </NavButtonSpan>\r\n          </NavButtonContainer>\r\n        </CarouselButtonsContainer>\r\n      </CarouselButtonsWrap>\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default CardSide;","import React, {FC} from 'react';\r\nimport {CardsCarouselContainer, CardsCarouselWrap, GridContainer} from \"./cards-carousel.styles\";\r\nimport CardSide from \"./CardSide/card-side\";\r\nimport {IStudySet, ITerm} from \"../../../types\";\r\nimport {updateDoc} from \"firebase/firestore\";\r\nimport firebase from \"firebase/compat\";\r\n\r\ninterface Props {\r\n  activeCard: ITerm | null,\r\n  studySet: IStudySet,\r\n  progressNumber: number,\r\n  isTermSide: boolean,\r\n  animate: boolean,\r\n  animation: \"prev\" | \"next\" | \"flip\",\r\n  keyChange: boolean,\r\n  toggleTermSide: () => void,\r\n  handleLeftButton: () => void,\r\n  handleRightButton: () => void,\r\n}\r\n\r\nconst CardsCarousel: FC<Props> = (props) => {\r\n  const {\r\n    activeCard,\r\n    studySet,\r\n    progressNumber,\r\n    isTermSide,\r\n    animate,\r\n    animation,\r\n    keyChange,\r\n    toggleTermSide,\r\n    handleLeftButton,\r\n    handleRightButton\r\n  } = props;\r\n\r\n  return (\r\n    <CardsCarouselWrap>\r\n      <CardsCarouselContainer>\r\n        <GridContainer\r\n          animate={animate}\r\n          animation={animation}\r\n          style={{zIndex: isTermSide ? 101 : 1}}\r\n          key={keyChange ? 1 : 2}\r\n        >\r\n          <CardSide\r\n            progressNumber={progressNumber}\r\n            isTerm={true}\r\n            value={activeCard ? activeCard.term : \"\"}\r\n            length={studySet.terms.length}\r\n            toggleTermSide={toggleTermSide}\r\n            handleLeftButton={handleLeftButton}\r\n            handleRightButton={handleRightButton}\r\n          />\r\n        </GridContainer>\r\n        <GridContainer\r\n          animate={animate}\r\n          animation={animation}\r\n          style={{zIndex: isTermSide ? 1 : 101}}\r\n          key={keyChange ? 3 : 4}\r\n        >\r\n          <CardSide\r\n            progressNumber={progressNumber}\r\n            isTerm={false}\r\n            value={activeCard ? activeCard.definition : \"\"}\r\n            length={studySet.terms.length}\r\n            toggleTermSide={toggleTermSide}\r\n            handleLeftButton={handleLeftButton}\r\n            handleRightButton={handleRightButton}\r\n          />\r\n        </GridContainer>\r\n      </CardsCarouselContainer>\r\n    </CardsCarouselWrap>\r\n  );\r\n};\r\n\r\nexport default CardsCarousel;","import styled from \"styled-components\";\r\nimport colors from \"../../../assets/colors\";\r\n\r\nexport const CardsFooterBase = styled.div`\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-box-pack: justify;\r\n  -ms-flex-pack: justify;\r\n  -webkit-flex-direction: row;\r\n  -ms-flex-direction: row;\r\n  flex-direction: row;\r\n  -webkit-justify-content: space-between;\r\n  justify-content: space-between;\r\n  padding-left: 1rem;\r\n  padding-right: 1rem;\r\n  padding-top: 1rem;\r\n  @media (max-width: 28.75rem) {\r\n    padding-top: 0.75rem;\r\n  }\r\n`\r\nexport const CardsFooterSide = styled.div`\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  -webkit-align-items: center;\r\n  align-items: center;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex-direction: row;\r\n  -ms-flex-direction: row;\r\n  flex-direction: row;\r\n  height: 2.5rem;\r\n  &:not(:last-child) {\r\n    margin-right: 2rem;\r\n  }\r\n  @media (max-width: 38.75rem) {\r\n    &:not(:last-child) {\r\n      margin-right: 1rem;\r\n    }\r\n  }\r\n`\r\nexport const CardsFooterButton = styled.button`\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  -webkit-box-pack: center;\r\n  -ms-flex-pack: center;\r\n  -webkit-align-items: center;\r\n  align-items: center;\r\n  border: none;\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  font: inherit;\r\n  -webkit-justify-content: center;\r\n  justify-content: center;\r\n  width: -webkit-fit-content;\r\n  width: -moz-fit-content;\r\n  width: fit-content;\r\n  border-radius: 0.5rem;\r\n  font-size: .875rem;\r\n  font-weight: 600;\r\n  -webkit-letter-spacing: normal;\r\n  -moz-letter-spacing: normal;\r\n  -ms-letter-spacing: normal;\r\n  letter-spacing: normal;\r\n  line-height: 1.4285714285714286;\r\n  min-height: 2.5rem;\r\n  border-radius: 50%;\r\n  padding: 0;\r\n  width: 2rem;\r\n  background: none;\r\n  color: ${colors.gray600};\r\n  border-radius: 50%;\r\n  padding: 0.625rem;\r\n  width: 2.5rem;\r\n  &:hover {\r\n    background-color: ${colors.neurtal300};\r\n  }\r\n`","import React, {FC, useState} from 'react';\r\nimport {CardsFooterBase, CardsFooterButton, CardsFooterSide} from \"./cards-footer.styles\";\r\nimport {FiShuffle} from 'react-icons/fi';\r\nimport {BsFillPauseFill, BsPlayFill} from \"react-icons/bs\";\r\nimport {IStudySet} from \"../../../types\";\r\nimport colors from \"../../../assets/colors\";\r\n\r\ninterface Props {\r\n  studySet: IStudySet,\r\n  setStudySet: (data: IStudySet) => void,\r\n  setProgressNumber: (num: number) => void,\r\n  toggleTermSide: () => void,\r\n  handleRightButton: () => void,\r\n  flipWithNoAnimation: () => void,\r\n}\r\n\r\nconst CardsFooter: FC<Props> = (props) => {\r\n\r\n  const FLIP_TIME = 3000;\r\n  const TOTAL_TIME = 6000;\r\n\r\n  const {\r\n    studySet,\r\n    setStudySet,\r\n    setProgressNumber,\r\n    handleRightButton,\r\n    toggleTermSide,\r\n    flipWithNoAnimation\r\n  } = props;\r\n\r\n  const [intervalId, setIntervalId] = useState<ReturnType<typeof setInterval> | null>(null);\r\n\r\n  const shuffleCards = () => {\r\n    let terms = studySet.terms.sort(() => Math.random() - 0.5);\r\n    setStudySet({...studySet, terms: terms});\r\n    setProgressNumber(0);\r\n  }\r\n\r\n  const handleClick = () => {\r\n    if (intervalId) {\r\n      clearInterval(intervalId);\r\n      setIntervalId(null);\r\n      return;\r\n    }\r\n\r\n    const newIntervalId = setInterval(() => {\r\n      toggleTermSide();\r\n      setTimeout(() => {\r\n        handleRightButton();\r\n        flipWithNoAnimation();\r\n      }, FLIP_TIME)\r\n    }, TOTAL_TIME);\r\n    setIntervalId(newIntervalId);\r\n  };\r\n\r\n  return (\r\n    <CardsFooterBase>\r\n      <CardsFooterSide onClick={shuffleCards}>\r\n        <CardsFooterButton name={\"Shuffle\"}>\r\n          <FiShuffle size={20}/>\r\n        </CardsFooterButton>\r\n      </CardsFooterSide>\r\n      <CardsFooterSide onClick={handleClick}>\r\n        <CardsFooterButton\r\n          style={intervalId ? {backgroundColor: \"white\", border: \"1px solid \" + colors.colorDisabled} : undefined}\r\n          name={\"Play cards\"}\r\n        >\r\n          {intervalId ? <BsFillPauseFill size={20}/> : <BsPlayFill size={20}/>}\r\n        </CardsFooterButton>\r\n      </CardsFooterSide>\r\n    </CardsFooterBase>\r\n  );\r\n};\r\n\r\nexport default CardsFooter;","import styled from \"styled-components\";\r\nimport colors from \"../../assets/colors\";\r\n\r\nexport const Wrap = styled.div<{ height: string }>`\r\n  height: ${props => props.height};\r\n  &:focus-visible{\r\n    outline: none;\r\n  }\r\n`\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: minmax(0, 1fr) auto;\r\n  height: calc(100% - 1rem);\r\n  @media (max-width: 38.75rem) {\r\n    height: calc(100% - .5rem);\r\n  }\r\n  &:focus-visible{\r\n    outline: none;\r\n  }\r\n`\r\nexport const MainSectionWrapper = styled.div`\r\n  background-color: ${colors.pageBackgroundColor};\r\n  max-height: 100%;\r\n  -webkit-transition: max-height .2s ease-in;\r\n  transition: max-height .2s ease-in;\r\n`\r\nexport const MainSectionContainer = styled.div`\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n`\r\nexport const MainSectionContainer2 = styled.div`\r\n  display: block;\r\n  -webkit-flex: 1;\r\n  -ms-flex: 1;\r\n  flex: 1;\r\n  margin-left: 0;\r\n  padding: 0;\r\n  position: relative;\r\n  width: 100%;\r\n`\r\nexport const HeightRegulator = styled.div`\r\n  height: 100%;\r\n  min-height: 31.25rem;\r\n  @media (max-width: 38.75rem) {\r\n    min-height: 25rem;\r\n  }\r\n`","import React, {KeyboardEvent, useReducer} from 'react';\r\nimport {IStudySet} from \"../../types\";\r\nimport CardsCarousel from \"./CardsCarousel/cards-carousel\";\r\nimport CardsFooter from \"./CardsFooter/cards-footer\";\r\nimport {cardsLogicReducer, initialState} from \"../../reducers/cards-logic\";\r\nimport {\r\n  Container,\r\n  HeightRegulator,\r\n  MainSectionContainer,\r\n  MainSectionContainer2,\r\n  MainSectionWrapper,\r\n  Wrap,\r\n} from \"./flash-cards.styles\";\r\n\r\ninterface Props extends React.PropsWithChildren {\r\n  studySet: IStudySet,\r\n  setStudySet: (studySet: IStudySet) => void,\r\n  progressNumber: number,\r\n  setProgressNumber: (num: number | ((num: number) => number)) => void,\r\n  height: string\r\n}\r\n\r\nconst FlashCards: React.FC<Props> = (props) => {\r\n\r\n  const {\r\n    studySet,\r\n    setStudySet,\r\n    progressNumber,\r\n    setProgressNumber,\r\n    height,\r\n    children\r\n  } = props;\r\n\r\n  const [state, dispatch] = useReducer(cardsLogicReducer, initialState);\r\n\r\n  const toggleTermSide = () => dispatch({type: \"TOGGLE_SIDE\"});\r\n  const flipWithNoAnimation = () => dispatch({type: \"FLIP_SIDE\"});\r\n\r\n  const handleLeftButton = () => {\r\n    dispatch({type: \"PREV_CARD\"});\r\n    setProgressNumber((prevState: number) => prevState === 0 ? studySet.terms.length - 1 : prevState - 1);\r\n  }\r\n  const handleRightButton = () => {\r\n    dispatch({type: \"NEXT_CARD\"});\r\n    setProgressNumber((prevState: number) => prevState === studySet.terms.length - 1 ? 0 : prevState + 1);\r\n  }\r\n\r\n  const handleArrowKeys = (e: KeyboardEvent<HTMLDivElement>) => {\r\n    if (e.key === \"ArrowRight\") handleRightButton()\r\n    else if (e.key === \"ArrowLeft\") handleLeftButton()\r\n    else if (e.key === \" \") toggleTermSide()\r\n  }\r\n\r\n  return (\r\n    <MainSectionWrapper>\r\n      <MainSectionContainer>\r\n        <MainSectionContainer2>\r\n          <HeightRegulator>\r\n            {children}\r\n            <Wrap\r\n              height={height}\r\n              tabIndex={0}\r\n              onKeyDown={handleArrowKeys}>\r\n              <Container>\r\n                <CardsCarousel\r\n                  activeCard={studySet.terms[progressNumber]}\r\n                  studySet={studySet}\r\n                  progressNumber={progressNumber}\r\n                  isTermSide={state.isTermSide}\r\n                  animation={state.animation}\r\n                  animate={state.animate}\r\n                  toggleTermSide={toggleTermSide}\r\n                  keyChange={state.keyChange}\r\n                  handleLeftButton={handleLeftButton}\r\n                  handleRightButton={handleRightButton}\r\n                />\r\n                <CardsFooter\r\n                  studySet={studySet}\r\n                  setStudySet={setStudySet}\r\n                  setProgressNumber={setProgressNumber}\r\n                  toggleTermSide={toggleTermSide}\r\n                  handleRightButton={handleRightButton}\r\n                  flipWithNoAnimation={flipWithNoAnimation}\r\n                />\r\n              </Container>\r\n            </Wrap>\r\n          </HeightRegulator>\r\n        </MainSectionContainer2>\r\n      </MainSectionContainer>\r\n    </MainSectionWrapper>\r\n  );\r\n};\r\n\r\nexport default FlashCards;"],"names":["Animation","CardsCarouselWrap","styled","CardsCarouselContainer","flipAnim","keyframes","prevCardAnim","nextCardAnim","GridContainer","props","animation","animate","CardContainer","colors","TermOrDefData","isActive","TermOrDefDataContent","TextFormater","CarouselButtonsWrap","CarouselButtonsContainer","NavButtonContainer","NavButtonSpan","progressNumber","isTerm","value","length","toggleTermSide","handleLeftButton","handleRightButton","style","gridColumn","gridRow","display","alignItems","justifyContent","onClick","color","activeCard","studySet","isTermSide","keyChange","zIndex","term","terms","definition","CardsFooterBase","CardsFooterSide","CardsFooterButton","setStudySet","setProgressNumber","flipWithNoAnimation","useState","intervalId","setIntervalId","sort","Math","random","name","size","clearInterval","newIntervalId","setInterval","setTimeout","backgroundColor","border","undefined","initialState","flip","cardsLogicReducer","state","action","type","next","prev","Wrap","height","Container","MainSectionWrapper","MainSectionContainer","MainSectionContainer2","HeightRegulator","children","useReducer","dispatch","prevState","tabIndex","onKeyDown","e","key"],"sourceRoot":""}