{"version":3,"file":"static/js/640.d77e7016.chunk.js","mappings":"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","sources":["hooks/useWindowDimensions.tsx","layouts/answer-item.styles.ts","pages/LearnPage/learn-page.styles.ts","pages/LearnPage/QuestionBox/question-box.styles.ts","pages/LearnPage/QuestionBox/question-box.tsx","pages/LearnPage/generate-questions.ts","hooks/useLearnPage.tsx","pages/LearnPage/learn-page.tsx"],"sourcesContent":["import {useEffect, useState} from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const {innerWidth: width, innerHeight: height} = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import styled from \"styled-components\";\r\nimport colors from \"../assets/colors\";\r\n\r\ninterface answerItem {\r\n  isFocus?: boolean,\r\n  color?: string,\r\n  bgColor?: string,\r\n  removeHover?: boolean,\r\n}\r\n\r\nconst AnswerItem = styled.section<answerItem>`\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    -webkit-align-items: center;\r\n    box-sizing: border-box;\r\n    align-items: center;\r\n    border: 0.125rem solid ${colors.neurtal300};\r\n    ${props => props.color ? `border-color: ${props.color};` : \"\"}\r\n    ${props => props.bgColor ? `background-color: ${props.bgColor};` : \"\"}\r\n    border-radius: 0.5rem;\r\n    color: ${colors.UIColorGray};\r\n    cursor: pointer;\r\n    display: grid;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    grid-template-columns: auto 1fr;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.5;\r\n    padding: 1rem;\r\n    position: relative;\r\n    width: 100%;\r\n    word-break: break-word;\r\n    @media (max-width: 48rem) {\r\n        max-width: 100%;\r\n    }\r\n    ${props => props.removeHover ? \"cursor: auto;\" : `&:hover{\r\n        ${props.isFocus ? `border-color: ${colors.indigo100}` : \"border-color: #939bb4;\"}\r\n        outline: none;\r\n    }`}\r\n    ${props => {\r\n  if (props.isFocus) {\r\n    return `\r\n            border-color: ${colors.blueBorder};\r\n            background-color: ${colors.indigo100};`\r\n  }\r\n}}\r\n`\r\nexport default AnswerItem;","import styled from \"styled-components\";\r\nimport colors from \"../../assets/colors\";\r\n\r\nexport const Container = styled.div`\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  min-height: calc(100vh - 66px);\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  background: ${colors.pageBackgroundColor};\r\n`\r\nexport const NestedContainer = styled.div`\r\n  display: block;\r\n  -webkit-flex: 1;\r\n  -ms-flex: 1;\r\n  flex: 1;\r\n  margin-left: 0;\r\n  padding: 2rem 1.5rem 0 1.5rem;\r\n  position: relative;\r\n  width: 100%;\r\n  @media (max-width: 64rem) {\r\n    padding-top: 1.5rem;\r\n  }\r\n  @media (max-width: 48rem) {\r\n    padding: 0;\r\n    margin-bottom: 4rem;\r\n  }\r\n`\r\nexport const MediaStyling = styled.div`\r\n  height: auto;\r\n  margin: 0 auto;\r\n  position: relative;\r\n  @media (max-width: 48rem) {\r\n    border-radius: 0;\r\n    margin: 0;\r\n    max-width: unset;\r\n  }\r\n`","import styled, {keyframes} from \"styled-components\";\r\nimport colors from \"../../../assets/colors\";\r\n\r\nexport const ShadowTransitions = styled.article`\r\n  -webkit-box-pack: justify;\r\n  -ms-flex-pack: justify;\r\n  background-color: ${colors.whiteColor};\r\n  border-radius: 0.5rem;\r\n  box-shadow: 0 0.25rem 1rem 0 ${colors.shadowWithOpacity};\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex-direction: column;\r\n  -ms-flex-direction: column;\r\n  flex-direction: column;\r\n  -webkit-justify-content: space-between;\r\n  justify-content: space-between;\r\n  margin: 0 auto;\r\n  max-width: 52.5rem;\r\n  min-height: 29.25rem;\r\n  padding: 1.5rem 2rem;\r\n  -webkit-transition: all .5s ease;\r\n  transition: all .5s ease;\r\n  position: relative;\r\n  @media (max-width: 64rem) {\r\n    padding: 1.5rem 2rem;\r\n  }\r\n  @media (max-width: 48rem) {\r\n    border-radius: var(--svwhkoh-13);\r\n    padding: 1rem;\r\n  }\r\n`\r\nexport const TopPartContainer = styled.div`\r\n  -webkit-box-align: stretch;\r\n  -ms-flex-align: stretch;\r\n  -webkit-box-pack: start;\r\n  -ms-flex-pack: start;\r\n  -webkit-align-items: stretch;\r\n  align-items: stretch;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex-direction: column;\r\n  -ms-flex-direction: column;\r\n  flex-direction: column;\r\n  -webkit-justify-content: flex-start;\r\n  justify-content: flex-start;\r\n  margin-bottom: 4rem;\r\n  position: relative;\r\n  @media (max-width: 48rem) {\r\n    padding-top: 2rem;\r\n  }\r\n  @media (max-width: 38.75rem) {\r\n    padding-top: 0;\r\n  }\r\n`\r\nexport const BottomPartContainer = styled.div`\r\n  -webkit-box-flex: 0;\r\n  -ms-flex-positive: 0;\r\n  -webkit-flex-grow: 0;\r\n  flex-grow: 0;\r\n  width: 100%;\r\n  z-index: 201;\r\n`\r\nexport const TopPartHeader = styled.div`\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  -webkit-align-items: center;\r\n  align-items: center;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex: 1;\r\n  -ms-flex: 1;\r\n  flex: 1;\r\n`\r\nexport const TopPartWrap = styled(TopPartHeader)`\r\n  margin-bottom: 1.5rem;\r\n  width: 100%;\r\n`\r\nexport const HeaderTitle = styled.div`\r\n  color: ${colors.UIColorGray60};\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  font-size: .875rem;\r\n  font-weight: 600;\r\n  -webkit-letter-spacing: normal;\r\n  -moz-letter-spacing: normal;\r\n  -ms-letter-spacing: normal;\r\n  letter-spacing: normal;\r\n  line-height: 1.4285714285714286;\r\n`\r\nexport const QuestionWrap = styled.div`\r\n  -webkit-box-align: stretch;\r\n  -ms-flex-align: stretch;\r\n  -webkit-align-items: stretch;\r\n  align-items: stretch;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex: 1;\r\n  -ms-flex: 1;\r\n  flex: 1;\r\n  word-break: break-word;\r\n`\r\nexport const QuestionContainer = styled.div`\r\n  -webkit-box-align: flex-start;\r\n  -ms-flex-align: flex-start;\r\n  -webkit-box-pack: justify;\r\n  -ms-flex-pack: justify;\r\n  -webkit-align-items: flex-start;\r\n  align-items: flex-start;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-flex: 0 0 100%;\r\n  -ms-flex: 0 0 100%;\r\n  flex: 0 0 100%;\r\n  -webkit-justify-content: space-between;\r\n  justify-content: space-between;\r\n  position: relative;\r\n`\r\nexport const TextFormatter = styled.div`\r\n  word-wrap: break-word;\r\n  position: relative;\r\n  word-break: break-word;\r\n  -webkit-font-smoothing: antialiased;\r\n  font-size: 20px;\r\n`\r\nexport const BottomPartHeader = styled.section`\r\n  color: ${colors.gray600};\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  -webkit-letter-spacing: normal;\r\n  -moz-letter-spacing: normal;\r\n  -ms-letter-spacing: normal;\r\n  letter-spacing: normal;\r\n  line-height: 1.5;\r\n  margin-bottom: 1.5rem;\r\n  @media (max-width: 48rem){\r\n    padding-bottom: 1rem;\r\n  }\r\n`\r\nexport const AnswersGrid = styled.div`\r\n  display: grid;\r\n  gap: 1.5rem;\r\n  grid-template-columns: 1fr 1fr;\r\n  @media (max-width: 38.75rem){\r\n    grid-template-columns: 1fr;\r\n  }\r\n`\r\nconst slideUp = keyframes`\r\n  0% {\r\n    transform: translateY(100%);\r\n  }\r\n  100% {\r\n    transform: translateY(0);\r\n  }\r\n`\r\nexport const IncorrectAnswerSlideUp = styled.div`\r\n  -webkit-animation: ${slideUp} .9s ;\r\n  animation: ${slideUp} .9s;\r\n  background-color: ${colors.whiteColor};\r\n  bottom: -0.3125rem;\r\n  box-shadow: 0 -0.25rem 1rem rgb(48 53 69 / 8%);\r\n  height: 5rem;\r\n  left: 0;\r\n  padding-left: 1.5rem;\r\n  padding-right: 1.5rem;\r\n  position: fixed;\r\n  width: 100%;\r\n  z-index: 401;\r\n  @media (max-width: 48rem){\r\n    padding-left: 0;\r\n    padding-right: 0;\r\n  }\r\n  @media (max-width: 38.75rem) {\r\n    height: 3rem;\r\n    padding-left: 0;\r\n    padding-right: 0;\r\n    padding-bottom: 2rem;\r\n  }\r\n`\r\nexport const SlideUpContainer = styled.div`\r\n  -webkit-box-align: center;\r\n  -ms-flex-align: center;\r\n  -webkit-box-pack: justify;\r\n  -ms-flex-pack: justify;\r\n  -webkit-align-items: center;\r\n  align-items: center;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  height: 100%;\r\n  -webkit-justify-content: space-between;\r\n  justify-content: space-between;\r\n  margin: auto;\r\n  max-width: 52.5rem;\r\n  padding: 0;\r\n  @media (max-width: 64rem) {\r\n    -webkit-box-pack: center;\r\n    -ms-flex-pack: center;\r\n    -webkit-justify-content: center;\r\n    justify-content: center;\r\n    max-width: 45rem;\r\n    padding: 0 1.5rem;\r\n    width: 100%;\r\n  }\r\n  @media (max-width: 38.75rem) {\r\n    max-width: unset;\r\n    padding: 1rem;\r\n  }\r\n`\r\nexport const SlideUpMessage = styled.span`\r\n  color: ${colors.UIColorGray60};\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  -webkit-letter-spacing: normal;\r\n  -moz-letter-spacing: normal;\r\n  -ms-letter-spacing: normal;\r\n  letter-spacing: normal;\r\n  line-height: 1.5;\r\n`","import React, {useContext, useState} from 'react';\r\nimport {\r\n  AnswersGrid,\r\n  BottomPartContainer,\r\n  BottomPartHeader,\r\n  HeaderTitle,\r\n  IncorrectAnswerSlideUp,\r\n  QuestionContainer,\r\n  QuestionWrap,\r\n  ShadowTransitions,\r\n  SlideUpContainer,\r\n  SlideUpMessage,\r\n  TextFormatter,\r\n  TopPartContainer,\r\n  TopPartHeader,\r\n  TopPartWrap\r\n} from \"./question-box.styles\";\r\nimport {ILearnTerm} from \"../../../types\";\r\nimport AnswerItem from \"../../../layouts/answer-item.styles\";\r\nimport {AiOutlineCheck} from \"react-icons/ai\";\r\nimport colors from \"../../../assets/colors\";\r\nimport {FiX} from \"react-icons/fi\";\r\nimport useWindowDimensions from \"../../../hooks/useWindowDimensions\";\r\nimport BlueButton from '../../../layouts/blue-button.styles';\r\nimport AuthContext from \"../../../context/auth-context\";\r\nimport {useLocation, useNavigate} from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  questions: ILearnTerm[]\r\n}\r\n\r\nconst QuestionBox: React.FC<Props> = ({questions}) => {\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const {setProgressBarWidth} = useContext(AuthContext);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [userAnswer, setUserAnswer] = useState<string>(\"\");\r\n  const {width} = useWindowDimensions();\r\n\r\n  const moveToNextQuestion = (delay: number) => {\r\n    setTimeout(() => {\r\n      if (activeIndex === questions.length - 1)\r\n        navigate(location.pathname.replace(\"/learn\", \"\"));\r\n      else {\r\n        setUserAnswer(\"\");\r\n        setActiveIndex(prevState => prevState + 1);\r\n        setProgressBarWidth((activeIndex + 1) * 100 / questions.length);\r\n      }\r\n    }, delay);\r\n  }\r\n\r\n  const handleClick = (item: string) => {\r\n    if (!userAnswer) {\r\n      setUserAnswer(item);\r\n      if (item === questions[activeIndex].term)\r\n        moveToNextQuestion(1500);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ShadowTransitions onKeyDown={() => moveToNextQuestion(300)}>\r\n        <TopPartContainer>\r\n          <TopPartHeader>\r\n            <TopPartWrap>\r\n              <HeaderTitle>Definition</HeaderTitle>\r\n            </TopPartWrap>\r\n          </TopPartHeader>\r\n          <QuestionWrap>\r\n            <QuestionContainer>\r\n              <TextFormatter>{questions[activeIndex].definition}</TextFormatter>\r\n            </QuestionContainer>\r\n          </QuestionWrap>\r\n        </TopPartContainer>\r\n        <BottomPartContainer>\r\n          {!userAnswer && <BottomPartHeader>Select the correct term</BottomPartHeader>}\r\n          {!!userAnswer ? userAnswer === questions[activeIndex].term ?\r\n              <BottomPartHeader style={{color: colors.green400}}>Awesome!</BottomPartHeader> :\r\n              <BottomPartHeader style={{color: colors.coral300}}>Not quite. You're still learning!</BottomPartHeader>\r\n            : undefined}\r\n          <AnswersGrid>\r\n            {questions[activeIndex].questions.map((item: string) => (\r\n              <AnswerItem\r\n                key={item}\r\n                tabIndex={0}\r\n                color={!!userAnswer ?\r\n                  item === questions[activeIndex].term ?\r\n                    colors.green400 :\r\n                    item === userAnswer ? colors.coral300 : undefined : undefined}\r\n                bgColor={!!userAnswer && item === questions[activeIndex].term ? colors.green100 : undefined}\r\n                removeHover={!!userAnswer}\r\n                style={!!userAnswer ? {\r\n                  transition: \"all 0.8s ease\",\r\n                  WebkitTransition: \"all 0.8s ease\",\r\n                  MozTransition: \"all 0.8s ease\"\r\n                } : {}}\r\n                onClick={() => handleClick(item)}\r\n              >\r\n                {(!!userAnswer && item === questions[activeIndex].term) &&\r\n                  <AiOutlineCheck style={{color: colors.green400, marginRight: \".625rem\"}}/>}\r\n                {(userAnswer === item && userAnswer !== questions[activeIndex].term) &&\r\n                  <FiX style={{color: colors.coral300, marginRight: \".625rem\"}}/>}\r\n                {item}\r\n              </AnswerItem>\r\n            ))}\r\n          </AnswersGrid>\r\n        </BottomPartContainer>\r\n      </ShadowTransitions>\r\n      {(!!userAnswer && userAnswer !== questions[activeIndex].term) && <>\r\n        <IncorrectAnswerSlideUp>\r\n          <SlideUpContainer>\r\n            {width > 1032 && <SlideUpMessage>Press any key</SlideUpMessage>}\r\n            <BlueButton\r\n              padding={\".75rem 1.5rem\"}\r\n              radius={\".5rem\"}\r\n              fontSize={\"1rem\"}\r\n              onClick={() => moveToNextQuestion(300)}\r\n            >\r\n              {activeIndex === questions.length - 1 ? \"Finish\" : \"Continue\"}\r\n            </BlueButton>\r\n          </SlideUpContainer>\r\n        </IncorrectAnswerSlideUp>\r\n      </>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QuestionBox;","import {ITerm, ILearnTerm} from \"../../types\";\r\n\r\nfunction generateQuestions(terms: ITerm[]) {\r\n  let result: ILearnTerm[] = [];\r\n  for (let i = 0; i < terms.length; i++) {\r\n    let questions: string[] = [terms[i].term];\r\n    while (questions.length < 4) {\r\n      const randomIndex = Math.floor(Math.random() * terms.length);\r\n      if (!questions.includes(terms[randomIndex].term))\r\n        questions.push(terms[randomIndex].term);\r\n    }\r\n\r\n    result.push({...terms[i], questions: questions.sort(() => 0.5 - Math.random())});\r\n  }\r\n  return result.sort(() => 0.5 - Math.random());\r\n}\r\n\r\nexport default generateQuestions;","import {useContext, useEffect, useState} from \"react\";\r\nimport AuthContext from \"../context/auth-context\";\r\nimport useGetStudySets from \"./useGetStudySets\";\r\nimport {ILearnTerm} from \"../types\";\r\nimport generateQuestions from \"../pages/LearnPage/generate-questions\";\r\n\r\nfunction useLearnPage(){\r\n  const {setProgressBarWidth} = useContext(AuthContext);\r\n  const [studySet, setStudySet] = useGetStudySets();\r\n\r\n  const [questions, setQuestions] = useState<ILearnTerm[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (studySet) setQuestions(generateQuestions([...studySet.terms]));\r\n    setProgressBarWidth(0);\r\n  }, [studySet])\r\n\r\n  return questions;\r\n}\r\nexport default useLearnPage;","import React from 'react';\r\nimport {Container, MediaStyling, NestedContainer,} from './learn-page.styles';\r\nimport QuestionBox from \"./QuestionBox/question-box\";\r\nimport useLearnPage from \"../../hooks/useLearnPage\";\r\n\r\n\r\nconst LearnPage = () => {\r\n\r\n  const questions = useLearnPage();\r\n\r\n  return (\r\n    <Container>\r\n      {questions.length > 0 && <NestedContainer>\r\n        <MediaStyling>\r\n          <QuestionBox questions={questions}/>\r\n        </MediaStyling>\r\n      </NestedContainer>}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LearnPage;"],"names":["getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","AnswerItem","styled","colors","props","color","bgColor","removeHover","isFocus","Container","NestedContainer","MediaStyling","ShadowTransitions","TopPartContainer","BottomPartContainer","TopPartHeader","TopPartWrap","HeaderTitle","QuestionWrap","QuestionContainer","TextFormatter","BottomPartHeader","AnswersGrid","slideUp","keyframes","IncorrectAnswerSlideUp","SlideUpContainer","SlideUpMessage","questions","navigate","useNavigate","location","useLocation","setProgressBarWidth","useContext","AuthContext","activeIndex","setActiveIndex","userAnswer","setUserAnswer","moveToNextQuestion","delay","setTimeout","length","pathname","replace","prevState","onKeyDown","definition","term","style","undefined","map","item","tabIndex","transition","WebkitTransition","MozTransition","onClick","handleClick","marginRight","padding","radius","fontSize","terms","result","i","randomIndex","Math","floor","random","includes","push","sort","useGetStudySets","studySet","setQuestions","generateQuestions","useLearnPage"],"sourceRoot":""}