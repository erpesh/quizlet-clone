{"version":3,"file":"static/js/983.393165ad.chunk.js","mappings":"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","sources":["components/AssemblyInput/assembly-input.tsx","hooks/useWindowDimensions.tsx","layouts/answer-item.styles.ts","pages/TestPage/test-generator.ts","pages/TestPage/test-page.styles.ts","pages/TestPage/Matching/CheckedPart/checked-part.styles.ts","pages/TestPage/Matching/CheckedPart/checked-test-item.tsx","pages/TestPage/Matching/CheckedPart/checked-part.tsx","pages/TestPage/Matching/DefinitionsItem/definitions-item.styles.ts","pages/TestPage/Matching/DefinitionsItem/definitions-item.tsx","pages/TestPage/Matching/matching.styles.ts","pages/TestPage/Matching/matching.tsx","pages/TestPage/MultipleChoice/multiple-choice.styles.ts","pages/TestPage/MultipleChoice/checked-part.tsx","pages/TestPage/MultipleChoice/multiple-choice.tsx","assets/images/submit-test-bg.svg","pages/TestPage/SubmitSection/submit-section.styles.ts","pages/TestPage/SubmitSection/sumbit-section.tsx","pages/TestPage/TestResultComponent/test-result-component.styles.ts","../node_modules/react-circular-progressbar/src/Path.tsx","../node_modules/react-circular-progressbar/src/CircularProgressbar.tsx","../node_modules/react-circular-progressbar/src/constants.ts","../node_modules/react-circular-progressbar/src/buildStyles.ts","assets/images/test-mode-icon.svg","assets/images/learn-mode-icon.svg","pages/TestPage/TestResultComponent/test-result-component.tsx","pages/TestPage/TrueOrFalse/true-or-false.styles.ts","pages/TestPage/TrueOrFalse/checked-part.tsx","pages/TestPage/TrueOrFalse/true-or-false.tsx","pages/TestPage/Written/written.styles.ts","pages/TestPage/Written/checked-part.tsx","pages/TestPage/Written/written.tsx","pages/TestPage/page-content.tsx","hooks/useProgressBarLength.tsx","pages/TestPage/test-page.tsx"],"sourcesContent":["import styled from \"styled-components\"\r\nimport colors from \"../../assets/colors\"\r\n\r\nexport const AssemblyInput = styled.input`\r\n  @media (min-width: 38.8125rem) {\r\n    font-size: 1rem;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.5; \r\n  }\r\n  outline: none;\r\n  -webkit-appearance: none;\r\n  -moz-appearance: none;\r\n  appearance: none;\r\n  background-color: initial;\r\n  border: none;\r\n  box-shadow: none;\r\n  color: ${colors.textGray800};\r\n  cursor: text;\r\n  -webkit-filter: none;\r\n  filter: none;\r\n  -webkit-flex: 1 1 auto;\r\n  -ms-flex: 1 1 auto;\r\n  flex: 1 1 auto;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  -webkit-letter-spacing: normal;\r\n  -moz-letter-spacing: normal;\r\n  -ms-letter-spacing: normal;\r\n  letter-spacing: normal;\r\n  line-height: 1.5;\r\n  padding-right: 1rem;\r\n`","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import styled from \"styled-components\";\r\nimport colors from \"../assets/colors\";\r\n\r\ninterface answerItem {\r\n  isFocus?: boolean,\r\n  color?: string,\r\n  bgColor?: string,\r\n  removeHover?: boolean,\r\n}\r\nconst AnswerItem = styled.section<answerItem>`\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    -webkit-align-items: center;\r\n    box-sizing: border-box;\r\n    align-items: center;\r\n    border: 0.125rem solid ${colors.neurtal300};\r\n    ${props => props.color ? `border-color: ${props.color};` : \"\"}\r\n    ${props => props.bgColor ? `background-color: ${props.bgColor};` : \"\"}\r\n    border-radius: 0.5rem;\r\n    color: ${colors.UIColorGray};\r\n    cursor: pointer;\r\n    display: grid;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    grid-template-columns: auto 1fr;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.5;\r\n    padding: 1rem;\r\n    position: relative;\r\n    width: 100%;\r\n    word-break: break-word;\r\n    @media (max-width: 48rem) {\r\n        max-width: 100%;\r\n    }\r\n    ${props => props.removeHover ? \"cursor: auto;\" : `&:hover{\r\n        ${props.isFocus ? `border-color: ${colors.indigo100}` : \"border-color: #939bb4;\"}\r\n        outline: none;\r\n    }`}\r\n    ${props => {\r\n  if (props.isFocus) {\r\n    return `\r\n            border-color: ${colors.blueBorder};\r\n            background-color: ${colors.indigo100};`\r\n  }\r\n}}\r\n`\r\nexport default AnswerItem;","import termTypes from \"../../types/term.types\";\r\n\r\nconst MAX_NUMBER_OF_TERMS = 20;\r\n\r\n\r\n// returns array of up to 20 terms for test\r\nconst selectRandomTerms = (terms: termTypes[]) => {\r\n    const shuffledTerms = terms.sort(() => 0.5 - Math.random());\r\n    return shuffledTerms.slice(0, MAX_NUMBER_OF_TERMS);\r\n}\r\nconst generateTest = (terms: termTypes[]) => {\r\n\r\n    const termsClone = [...terms];\r\n    let selectedTerms = selectRandomTerms(terms);\r\n    const selectedTermsLength = selectedTerms.length;\r\n\r\n    // separating terms to types\r\n    const multipleChoiceTerms = selectedTerms.splice(0, selectedTerms.length / 4);\r\n\r\n    const trueFalseTerms = selectedTerms.splice(0, selectedTerms.length / 3);\r\n    let incorrectAnswers = termsClone.filter(item => {\r\n        return trueFalseTerms.filter(trueFalseItem => trueFalseItem.id === item.id).length === 0;\r\n    })\r\n    let incorrectMultipleAnswers = termsClone.filter(item => {\r\n        return multipleChoiceTerms.filter(mChouseItem => mChouseItem.id === item.id).length === 0;\r\n    })\r\n\r\n    let writtenTerms: termTypes[];\r\n    if (selectedTermsLength < 5)\r\n        writtenTerms = selectedTerms.splice(0, selectedTerms.length);\r\n    else\r\n        writtenTerms = selectedTerms.splice(0, selectedTerms.length / 2);\r\n\r\n    const matchingTerms = selectedTerms;\r\n\r\n    // generate true or false tests\r\n    const trueFalseItems = trueFalseTerms.map(item => {\r\n        let number = Math.random() < 0.5;\r\n        if (number) {\r\n            const randomNumber = Math.floor(Math.random()*incorrectAnswers.length)\r\n            const [incorrectAnswer] = incorrectAnswers.splice(randomNumber, 1);\r\n            return {\r\n                ...item,\r\n                isTrue: false,\r\n                isCorrect: false,\r\n                incorrectAnswer: incorrectAnswer,\r\n                isAnswered: false\r\n            }\r\n        }\r\n        return { ...item, isAnswered: false, isTrue: true, isCorrect: false, incorrectAnswer: null };\r\n    })\r\n\r\n    // generate multiple choise tests\r\n    const multipleChoiseItems = multipleChoiceTerms.map(item => {\r\n        let possibleAnswers = [];\r\n        for (let i = 0; i < 3; i++) {\r\n            const randomNumber = Math.floor(Math.random()*incorrectMultipleAnswers.length)\r\n            let [item] = incorrectMultipleAnswers.splice(randomNumber, 1);\r\n            possibleAnswers.push(item);\r\n        }\r\n        possibleAnswers.push(item)\r\n        //shuffle answers\r\n        possibleAnswers = possibleAnswers.sort(() => 0.5 - Math.random());\r\n        return { ...item, possibleAnswers: possibleAnswers, isCorrect: false, answer: null };\r\n    })\r\n\r\n    const matchingItems = matchingTerms.map(item => {\r\n        return { ...item, isCorrect: false, answer: null }\r\n    })\r\n    const matchingTest = {\r\n        items: matchingItems,\r\n        answers: matchingItems.map((item, index) =>  ({answer: item.term, index: index})).sort(() => 0.5 - Math.random())\r\n    }\r\n\r\n    const writtenItems = writtenTerms.map(item => {\r\n        return { ...item, isCorrect: false, answer: null }\r\n    })\r\n\r\n    const lengths = [\r\n        trueFalseItems.length,\r\n        multipleChoiseItems.length,\r\n        matchingItems.length,\r\n        writtenItems.length\r\n    ]\r\n    const generatedTest = {\r\n        trueFalse: trueFalseItems,\r\n        multipleChoice: multipleChoiseItems,\r\n        matching: matchingTest,\r\n        written: writtenItems,\r\n        lengths: lengths,\r\n        totalLength: lengths.reduce((partialSum, a) => partialSum + a, 0),\r\n    }\r\n    return generatedTest;\r\n}\r\nexport default generateTest;","import styled from \"styled-components\";\r\nimport colors from \"../../assets/colors\";\r\n\r\nexport const PageContainer = styled.div`\r\n    width:100%;\r\n    background-color: ${colors.pageBackgroundColor};\r\n    max-height: 100%;\r\n    -webkit-transition: max-height .2s ease-in;\r\n    transition: max-height .2s ease-in;\r\n`\r\nexport const Container = styled.article`\r\n    -webkit-box-pack: justify;\r\n    -ms-flex-pack: justify;\r\n    background-color: ${colors.whiteColor};\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0 0.25rem 1rem 0 ${colors.shadowWithOpacity};\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-direction: column;\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n    -webkit-justify-content: space-between;\r\n    justify-content: space-between;\r\n    margin: 0 auto 0;\r\n    max-width: 52.5rem;\r\n    min-height: 29.25rem;\r\n    padding: 1.5rem 2rem;\r\n    -webkit-transition: all .5s ease;\r\n    transition: all .5s ease;\r\n    display: grid;\r\n    gap: 1.5rem;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 1fr auto auto;\r\n    margin-top: 2rem;\r\n    position: relative;\r\n    @media (max-width: 64rem){\r\n        padding: 1.5rem 2rem;\r\n    }\r\n    @media (max-width: 48rem) {\r\n        border-radius: .5rem;\r\n        padding: 1rem;\r\n    }\r\n`\r\nexport const PageWrapper = styled.div`\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    height: 100%;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    @media (max-width: 48rem) {\r\n        padding: 0;\r\n    }\r\n    @media (max-width: 64rem){\r\n        padding-top: 1.5rem;\r\n    }\r\n`\r\nexport const PageContentWrap = styled.div`\r\n    display: block;\r\n    -webkit-flex: 1;\r\n    -ms-flex: 1;\r\n    flex: 1;\r\n    margin-left: 0;\r\n    padding: 2rem 1.5rem 1.5rem;\r\n    position: relative;\r\n    width: 100%;\r\n    @media (max-width: 38.75em){\r\n        padding: 2rem 0 1.5rem;\r\n    }\r\n`\r\nexport const TrueFalseSection = styled.section`\r\n    margin: 0 auto;\r\n    max-width: 52.5rem;\r\n    padding: 0 2rem;\r\n    @media (max-width: 38.75rem){\r\n        margin-top: 0;\r\n        padding: 2rem 1rem;\r\n    }\r\n    @media (max-width: 48rem) {\r\n        margin-top: 2rem;\r\n    }\r\n`\r\nexport const OtherSection = styled.section`\r\n    margin: 1rem auto 0;\r\n    max-width: 52.5rem;\r\n    padding: 0 2rem;\r\n    @media (max-width: 38.75rem){\r\n        padding: 2rem 1rem;\r\n        margin-top: 0;\r\n        padding-top: 0;\r\n    }\r\n    @media (max-width: 48rem) {\r\n        margin-top: 1rem;\r\n    }\r\n`\r\nexport const NumberContainer = styled.div`\r\n    position: absolute;\r\n    right: 1.5rem;\r\n    top: 1.5rem;\r\n    @media (max-width: 48rem) {\r\n        right: 1rem;\r\n        top: 1rem;\r\n    }\r\n`\r\nexport const NumberContent = styled.div`\r\n    color: ${colors.UIColorGray60};\r\n    font-size: .875rem;\r\n    font-weight: 400;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.4285714285714286;\r\n`\r\nexport const TopPart = styled.div`\r\n    -webkit-box-align: stretch;\r\n    -ms-flex-align: stretch;\r\n    -webkit-box-pack: start;\r\n    -ms-flex-pack: start;\r\n    -webkit-align-items: stretch;\r\n    align-items: stretch;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-direction: column;\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n    -webkit-justify-content: flex-start;\r\n    justify-content: flex-start;\r\n    margin-bottom: 4rem;\r\n    position: relative;\r\n    @media (max-width: 48rem) {\r\n        padding-top: 2rem;\r\n    }\r\n    @media (max-width: 38.75rem){\r\n        padding-top: 0;\r\n    }\r\n`\r\nexport const WordTitleWrap = styled.div`\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    -webkit-align-items: center;\r\n    align-items: center;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex: 1;\r\n    -ms-flex: 1;\r\n    flex: 1;\r\n`\r\nexport const WordTitleContainer = styled(WordTitleWrap)`\r\n    margin-bottom: 1.5rem;\r\n    width: 100%;\r\n`\r\nexport const WordContainer = styled.div`\r\n    -webkit-box-align: stretch;\r\n    -ms-flex-align: stretch;\r\n    -webkit-align-items: stretch;\r\n    align-items: stretch;\r\n    cursor: auto;\r\n    -webkit-flex: 1;\r\n    -ms-flex: 1;\r\n    flex: 1;\r\n    word-break: break-word;\r\n`\r\nexport const WordHandler = styled.div`\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    -webkit-box-pack: justify;\r\n    -ms-flex-pack: justify;\r\n    -webkit-align-items: center;\r\n    align-items: center;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex: 0 0 100%;\r\n    -ms-flex: 0 0 100%;\r\n    flex: 0 0 100%;\r\n    -webkit-justify-content: space-between;\r\n    justify-content: space-between;\r\n    position: relative;\r\n    -webkit-box-align: flex-start;\r\n    -ms-flex-align: flex-start;\r\n    -webkit-align-items: flex-start;\r\n    align-items: flex-start;\r\n`\r\nexport const Word = styled.div`\r\n    word-wrap: break-word;\r\n    position: relative;\r\n    word-break: break-word;\r\n    font-size: 20px;\r\n    -webkit-font-smoothing: antialiased;\r\n`\r\nexport const TitleWrap = styled(WordTitleWrap)`\r\n    -webkit-box-pack: start;\r\n    -ms-flex-pack: start;\r\n    -webkit-justify-content: flex-start;\r\n    justify-content: flex-start;\r\n    min-width: -webkit-fit-content;\r\n    min-width: -moz-fit-content;\r\n    min-width: fit-content;\r\n`\r\nexport const TitleCenter = styled(WordTitleWrap)`\r\n    -webkit-box-pack: center;\r\n    -ms-flex-pack: center;\r\n    -webkit-justify-content: center;\r\n    justify-content: center;\r\n`\r\nexport const TitleEnd = styled(WordTitleWrap)`\r\n    -webkit-box-pack: end;\r\n    -ms-flex-pack: end;\r\n    -webkit-justify-content: flex-end;\r\n    justify-content: flex-end;\r\n`\r\nexport const WordTitle = styled.section`\r\n    color: ${colors.UIColorGray60};\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    font-size: .875rem;\r\n    font-weight: 600;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.4285714285714286;\r\n`\r\nexport const AnswersTitle = styled.h4`\r\n    color: ${colors.ink100};\r\n    font-size: 1.25rem;\r\n    font-weight: 700;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.4;\r\n`","import styled from \"styled-components\";\r\nimport colors from \"../../../../assets/colors\";\r\n\r\nexport const TestItemContainer = styled.div`\r\n    border-top: 0.0625rem solid ${colors.neurtal300};\r\n    padding: 3rem 0;\r\n`\r\nexport const TestItemHeaderContainer = styled.div`\r\n    -webkit-box-align: stretch;\r\n    -ms-flex-align: stretch;\r\n    -webkit-align-items: stretch;\r\n    align-items: stretch;\r\n    cursor: auto;\r\n    -webkit-flex: 1;\r\n    -ms-flex: 1;\r\n    flex: 1;\r\n    word-break: break-word;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n`\r\nexport const TestItemHeaderWrap = styled.div`\r\n    -webkit-box-align: flex-start;\r\n    -ms-flex-align: flex-start;\r\n    -webkit-box-pack: justify;\r\n    -ms-flex-pack: justify;\r\n    -webkit-align-items: flex-start;\r\n    align-items: flex-start;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex: 0 0 100%;\r\n    -ms-flex: 0 0 100%;\r\n    flex: 0 0 100%;\r\n    -webkit-justify-content: space-between;\r\n    justify-content: space-between;\r\n    position: relative;\r\n`\r\nexport const TextFormater = styled.div`\r\n    word-wrap: break-word;\r\n    position: relative;\r\n    word-break: break-word;\r\n    -webkit-font-smoothing: antialiased;\r\n`\r\nexport const TestItemMessage = styled.div<{textColor: string}>`\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.5;\r\n    margin-bottom: 1rem;\r\n    margin-top: 1.5rem;\r\n    color: ${props => props.textColor};\r\n`\r\nexport const AnswerContainer = styled.div`\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    gap: 1.5rem;\r\n    @media (max-width: 38.75rem){\r\n        -webkit-flex-direction: column;\r\n        -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    }\r\n`","import React from 'react'\r\nimport colors from '../../../../assets/colors';\r\nimport AnswerItem from \"../../../../layouts/answer-item.styles\";\r\nimport {\r\n    AnswerContainer,\r\n    TestItemContainer,\r\n    TestItemHeaderContainer,\r\n    TestItemHeaderWrap,\r\n    TestItemMessage,\r\n    TextFormater\r\n} from './checked-part.styles';\r\nimport { AiOutlineCheck } from 'react-icons/ai';\r\nimport { matchingTestItem } from '../../../../types/test-page.types';\r\nimport { FiX } from 'react-icons/fi';\r\n\r\ninterface Props {\r\n    testItem: matchingTestItem\r\n}\r\n\r\nconst CheckedTestItem: React.FC<Props> = ({ testItem }) => {\r\n    const {\r\n        isCorrect,\r\n        term,\r\n        answer,\r\n        definition\r\n    } = testItem;\r\n\r\n    // when answer is skipped\r\n    if (!answer) return <>\r\n        <TestItemContainer>\r\n            <TestItemHeaderContainer>\r\n                <TestItemHeaderWrap>\r\n                    <TextFormater>{definition}</TextFormater>\r\n                </TestItemHeaderWrap>\r\n            </TestItemHeaderContainer>\r\n            <TestItemMessage textColor={colors.UIColorGray60}>Give this one a go later!</TestItemMessage>\r\n            <AnswerContainer>\r\n                <AnswerItem\r\n                    tabIndex={0}\r\n                    color={colors.UIColorGray60}\r\n                    removeHover\r\n                >\r\n                    <AiOutlineCheck style={{ color: colors.UIColorGray60, marginRight: \".625rem\" }} />\r\n                    {term}\r\n                </AnswerItem>\r\n            </AnswerContainer>\r\n        </TestItemContainer>\r\n    </>\r\n\r\n    // When asnwer is correct\r\n    if (isCorrect) return <>\r\n        <TestItemContainer>\r\n            <TestItemHeaderContainer>\r\n                <TestItemHeaderWrap>\r\n                    <TextFormater>{definition}</TextFormater>\r\n                </TestItemHeaderWrap>\r\n            </TestItemHeaderContainer>\r\n            <TestItemMessage textColor={colors.green400}>Awesome!</TestItemMessage>\r\n            <AnswerContainer>\r\n                <AnswerItem\r\n                    tabIndex={0}\r\n                    color={colors.green400}\r\n                    bgColor={colors.green100}\r\n                    removeHover\r\n                >\r\n                    <AiOutlineCheck style={{ color: colors.green400, marginRight: \".625rem\" }} />\r\n                    {term}\r\n                </AnswerItem>\r\n            </AnswerContainer>\r\n        </TestItemContainer>\r\n    </>\r\n\r\n    return (\r\n        <TestItemContainer>\r\n            <TestItemHeaderContainer>\r\n                <TestItemHeaderWrap>\r\n                    <TextFormater>{definition}</TextFormater>\r\n                </TestItemHeaderWrap>\r\n            </TestItemHeaderContainer>\r\n            <TestItemMessage textColor={colors.coral300}>Not quite. You're still learning!</TestItemMessage>\r\n            <AnswerContainer>\r\n                <AnswerItem\r\n                    tabIndex={0}\r\n                    color={colors.coral300}\r\n                    removeHover\r\n                >\r\n                    <FiX style={{ color: colors.coral300, marginRight: \".625rem\" }} />\r\n                    {answer}\r\n                </AnswerItem>\r\n                <AnswerItem\r\n                    tabIndex={0}\r\n                    color={colors.green400}\r\n                    bgColor={colors.green100}\r\n                    removeHover\r\n                >\r\n                    <AiOutlineCheck style={{ color: colors.green400, marginRight: \".625rem\" }} />\r\n                    {term}\r\n                </AnswerItem>\r\n            </AnswerContainer>\r\n        </TestItemContainer>\r\n    )\r\n}\r\n\r\nexport default CheckedTestItem","import React from 'react'\r\nimport { matchingTest } from '../../../../types/test-page.types'\r\nimport CheckedTestItem from './checked-test-item'\r\n\r\ninterface Props {\r\n    matchingTest: matchingTest\r\n}\r\n\r\nconst CheckedPart: React.FC<Props> = ({matchingTest}) => {\r\n    return (\r\n        <>\r\n            {matchingTest.items.map(item => <CheckedTestItem key={item.id} testItem={item}/>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CheckedPart","import styled from \"styled-components\";\r\nimport colors from \"../../../../assets/colors\";\r\n\r\nexport const TextContainer = styled.div`\r\n    -webkit-box-align: stretch;\r\n    -ms-flex-align: stretch;\r\n    -webkit-align-items: stretch;\r\n    align-items: stretch;\r\n    cursor: auto;\r\n    -webkit-flex: 1;\r\n    -ms-flex: 1;\r\n    flex: 1;\r\n    word-break: break-word;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n`\r\nexport const TextWrap = styled.div`\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    -webkit-box-pack: justify;\r\n    -ms-flex-pack: justify;\r\n    -webkit-align-items: center;\r\n    align-items: center;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex: 0 0 100%;\r\n    -ms-flex: 0 0 100%;\r\n    flex: 0 0 100%;\r\n    -webkit-justify-content: space-between;\r\n    justify-content: space-between;\r\n    position: relative;\r\n`\r\nexport const TextFormater = styled.div`\r\n    word-wrap: break-word;\r\n    position: relative;\r\n    word-break: break-word;\r\n    -webkit-font-smoothing: antialiased;\r\n    font-family: Lucida Grande,Arial!important;\r\n    font-size: 1.1em;\r\n`\r\nexport const DefaultAnswerBox = styled.div`\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    -ms-flex-item-align: center;\r\n    -webkit-box-pack: justify;\r\n    -ms-flex-pack: justify;\r\n    -webkit-align-items: center;\r\n    align-items: center;\r\n    -webkit-align-self: center;\r\n    align-self: center;\r\n    background-color: ${colors.whiteColor};\r\n    border: 0.125rem solid ${colors.neurtal300};\r\n    border-radius: 0.5rem;\r\n    cursor: pointer;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    font-size: .875rem;\r\n    font-weight: 600;\r\n    -webkit-justify-content: space-between;\r\n    justify-content: space-between;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.4285714285714286;\r\n    box-sizing: border-box;\r\n    min-height: 3.75rem;\r\n    padding: 1rem;\r\n    color: ${colors.ink100};\r\n`\r\nexport const InactiveAnswerBox = styled(DefaultAnswerBox)`\r\n    border: 0.125rem dashed ${colors.colorDisabled};\r\n    border-radius: .25rem;\r\n    &:hover{\r\n        border-color: #939bb4;\r\n    }\r\n`\r\nexport const ActiveAnswerBox = styled(DefaultAnswerBox)`\r\n    background-color: ${colors.indigo100};\r\n    border: 0.125rem solid #4257b2;\r\n    border-radius: 0.25rem;\r\n`\r\nexport const ActiveAnswerBoxWithMessage = styled(ActiveAnswerBox)`\r\n    -webkit-box-pack: center;\r\n    -ms-flex-pack: center;\r\n    -webkit-justify-content: center;\r\n    justify-content: center;\r\n`\r\nexport const ActiveBoxMessage = styled.span`\r\n    cursor: pointer;\r\n    color: #4257b2;\r\n    font-style: italic;\r\n`\r\nexport const RemoveIconContainer = styled.div`\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    -ms-flex-negative: 0;\r\n    -webkit-box-pack: center;\r\n    -ms-flex-pack: center;\r\n    -webkit-align-items: center;\r\n    align-items: center;\r\n    color: #939bb4;\r\n    cursor: pointer;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-shrink: 0;\r\n    flex-shrink: 0;\r\n    -webkit-justify-content: center;\r\n    justify-content: center;\r\n    margin-left: 0.5rem;\r\n    min-height: 1.5rem;\r\n    min-width: 1.5rem;\r\n`\r\nexport const AnsweredBoxContent = styled.div`\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    -webkit-box-pack: justify;\r\n    -ms-flex-pack: justify;\r\n    -webkit-align-items: center;\r\n    align-items: center;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex: 0 0 100%;\r\n    -ms-flex: 0 0 100%;\r\n    flex: 0 0 100%;\r\n    -webkit-justify-content: space-between;\r\n    justify-content: space-between;\r\n    position: relative;\r\n`","import React from 'react'\r\nimport { matchingTestItem, testType } from '../../../../types/test-page.types'\r\nimport {\r\n    InactiveAnswerBox,\r\n    ActiveAnswerBox,\r\n    ActiveAnswerBoxWithMessage,\r\n    ActiveBoxMessage,\r\n    TextContainer,\r\n    TextFormater,\r\n    TextWrap,\r\n    DefaultAnswerBox,\r\n    RemoveIconContainer,\r\n    AnsweredBoxContent\r\n} from './definitions-item.styles'\r\nimport { FiX } from 'react-icons/fi';\r\nimport useWindowDimensions from '../../../../hooks/useWindowDimensions';\r\n\r\ninterface Props {\r\n    testItem: matchingTestItem,\r\n    index: number,\r\n    focusedItem: number,\r\n    setFocusedItem: (item: number) => void,\r\n    isNoAnswers: boolean,\r\n    testSet: testType,\r\n    setTestSet: (testSet: testType) => void\r\n}\r\n\r\nconst answerBox = (\r\n    testItem: matchingTestItem,\r\n    focusedItem: number,\r\n    isNoAnswers: boolean,\r\n    setFocusedItem: (item: number) => void,\r\n    index: number,\r\n    testSet: testType,\r\n    setTestSet: (testSet: testType) => void\r\n) => {\r\n\r\n    const onClickHandler = () => {\r\n        if (focusedItem !== index) {\r\n            setFocusedItem(index);\r\n        }\r\n    }\r\n    const removeClickHandler = () => {\r\n        let matchingItems = [...testSet.matching.items];\r\n        matchingItems[index].answer = null;\r\n        matchingItems[index].isCorrect = false;\r\n        setTestSet({ ...testSet, matching: { ...testSet.matching, items: matchingItems } });\r\n    }\r\n\r\n    if (testItem.answer) {\r\n        if (focusedItem === index) {\r\n            return (\r\n                <ActiveAnswerBox onClick={onClickHandler} tabIndex={-1}>\r\n                    <div style={{ cursor: \"pointer\" }}>\r\n                        <AnsweredBoxContent>\r\n                            <TextFormater>\r\n                                {testItem.answer}\r\n                            </TextFormater>\r\n                        </AnsweredBoxContent>\r\n                    </div>\r\n                    <RemoveIconContainer onClick={removeClickHandler} tabIndex={0}>\r\n                        <FiX />\r\n                    </RemoveIconContainer>\r\n                </ActiveAnswerBox>\r\n            )\r\n        }\r\n        return (\r\n            <DefaultAnswerBox onClick={onClickHandler} tabIndex={-1}>\r\n                <div style={{ cursor: \"pointer\" }}>\r\n                    <AnsweredBoxContent>\r\n                        <TextFormater>\r\n                            {testItem.answer}\r\n                        </TextFormater>\r\n                    </AnsweredBoxContent>\r\n                </div>\r\n                <RemoveIconContainer onClick={removeClickHandler} tabIndex={0}>\r\n                    <FiX />\r\n                </RemoveIconContainer>\r\n            </DefaultAnswerBox>\r\n        )\r\n    }\r\n    if (isNoAnswers && focusedItem === index) {\r\n        return (\r\n            <ActiveAnswerBoxWithMessage onClick={onClickHandler} tabIndex={-1}>\r\n                <ActiveBoxMessage>Select from the list below</ActiveBoxMessage>\r\n            </ActiveAnswerBoxWithMessage>\r\n        )\r\n    }\r\n    if (focusedItem === index) {\r\n        return <ActiveAnswerBox onClick={onClickHandler} tabIndex={-1} />\r\n    }\r\n    return <InactiveAnswerBox onClick={onClickHandler} tabIndex={-1} />\r\n}\r\n\r\nconst DefinitionsItem: React.FC<Props> = (props) => {\r\n\r\n    const {\r\n        testItem,\r\n        index,\r\n        focusedItem,\r\n        setFocusedItem,\r\n        isNoAnswers,\r\n        testSet,\r\n        setTestSet\r\n    } = props;\r\n\r\n    const { height, width } = useWindowDimensions();\r\n\r\n    return (\r\n        <>\r\n            {\r\n                width > 620 ? <>\r\n                    {answerBox(\r\n                        testItem,\r\n                        focusedItem,\r\n                        isNoAnswers,\r\n                        setFocusedItem,\r\n                        index,\r\n                        testSet,\r\n                        setTestSet)}\r\n                    <TextContainer>\r\n                        <TextWrap>\r\n                            <TextFormater>\r\n                                {testItem.definition}\r\n                            </TextFormater>\r\n                        </TextWrap>\r\n                    </TextContainer>\r\n                </>\r\n                    :\r\n                    <>\r\n                        <TextContainer>\r\n                            <TextWrap>\r\n                                <TextFormater>\r\n                                    {testItem.definition}\r\n                                </TextFormater>\r\n                            </TextWrap>\r\n                        </TextContainer>\r\n                        {answerBox(\r\n                            testItem,\r\n                            focusedItem,\r\n                            isNoAnswers,\r\n                            setFocusedItem,\r\n                            index,\r\n                            testSet,\r\n                            setTestSet)}\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DefinitionsItem","import styled from \"styled-components\";\r\nimport colors from \"../../../assets/colors\";\r\n\r\nexport const Container = styled.article`\r\n    -webkit-box-pack: justify;\r\n    -ms-flex-pack: justify;\r\n    background-color: ${colors.whiteColor};\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0 0.25rem 1rem 0 ${colors.shadowWithOpacity};\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-direction: column;\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n    -webkit-justify-content: space-between;\r\n    justify-content: space-between;\r\n    margin: 0 auto;\r\n    max-width: 52.5rem;\r\n    min-height: 29.25rem;\r\n    padding: 1.5rem 2rem;\r\n    -webkit-transition: all .5s ease;\r\n    transition: all .5s ease;\r\n    margin-top: 2rem;\r\n    position: relative;\r\n`\r\nexport const ComponentTitle = styled.div`\r\n    color: ${colors.UIColorGray60};\r\n    font-size: .875rem;\r\n    font-weight: 600;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.4285714285714286;\r\n    margin-bottom: 1.5rem;\r\n`\r\nexport const ComponentHeader = styled.div`\r\n    color: ${colors.UIColorGray};\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.5;\r\n    margin-bottom: 1.5rem;\r\n`\r\nexport const DefinitionsPart = styled.div`\r\n    border-bottom: 0.0625rem solid ${colors.neurtal300};\r\n    border-top: 0.0625rem solid ${colors.neurtal300};\r\n    display: grid;\r\n    font-size: 1rem;\r\n    font-weight: 400;\r\n    gap: 1.5rem;\r\n    grid-template-columns: 1.25fr 3fr;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.5;\r\n    padding: 2rem 0;\r\n    @media (max-width: 38.75rem) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`\r\nexport const AnswersPart = styled.div`\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-wrap: wrap;\r\n    -ms-flex-wrap: wrap;\r\n    flex-wrap: wrap;\r\n    margin-left: -1 * .5rem;\r\n    margin-top: -1 * 1rem;\r\n    padding-top: 2rem;\r\n`\r\nexport const AnswerItemContainer = styled.div<{isTaken: boolean}>`\r\n    border: 0.0625rem solid ${colors.colorDisabled};\r\n    border-radius: 0.5rem;\r\n    color: ${colors.ink100};\r\n    cursor: pointer;\r\n    display: grid;\r\n    font-size: .875rem;\r\n    font-weight: 600;\r\n    grid-template-columns: auto 1fr;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.4285714285714286;\r\n    padding: 0.5rem 1rem;\r\n    margin-left: 0.5rem;\r\n    margin-top: 1rem;\r\n    cursor: pointer;\r\n    &:hover{\r\n        border-color: #939bb4;\r\n        outline: none;\r\n    }\r\n    ${props => (props.isTaken ?\r\n        `opacity: .5;\r\n        pointer-events: none;\r\n        border-color: transparent;\r\n        cursor: auto;\r\n        &:hover {\r\n            border-color: transparent;\r\n        }` : ``\r\n    )}\r\n`\r\nexport const AnswerItemWrap = styled.div`\r\n    -webkit-box-align: stretch;\r\n    -ms-flex-align: stretch;\r\n    -webkit-align-items: stretch;\r\n    align-items: stretch;\r\n    -webkit-flex: 1;\r\n    -ms-flex: 1;\r\n    flex: 1;\r\n    word-break: break-word;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n`\r\nexport const AnswerItemContent = styled.div`\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    -webkit-box-pack: justify;\r\n    -ms-flex-pack: justify;\r\n    -webkit-align-items: center;\r\n    align-items: center;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex: 0 0 100%;\r\n    -ms-flex: 0 0 100%;\r\n    flex: 0 0 100%;\r\n    -webkit-justify-content: space-between;\r\n    justify-content: space-between;\r\n    position: relative;\r\n`\r\nexport const TextFormater = styled.div`\r\n    word-wrap: break-word;\r\n    position: relative;\r\n    word-break: break-word;\r\n    -webkit-font-smoothing: antialiased;\r\n    font-family: Lucida Grande,Arial!important;\r\n    font-size: 1.1em;\r\n`","import React, {useEffect, useState} from 'react';\r\nimport {testType} from '../../../types/test-page.types';\r\nimport {\r\n  NumberContainer,\r\n  NumberContent\r\n} from '../test-page.styles';\r\nimport CheckedPart from './CheckedPart/checked-part';\r\nimport DefinitionsItem from './DefinitionsItem/definitions-item';\r\nimport {\r\n  Container,\r\n  ComponentHeader,\r\n  ComponentTitle,\r\n  DefinitionsPart,\r\n  AnswersPart,\r\n  AnswerItemContainer,\r\n  AnswerItemWrap,\r\n  AnswerItemContent,\r\n  TextFormater,\r\n} from './matching.styles';\r\n\r\ninterface Props {\r\n  testSet: testType,\r\n  setTestSet: (testSet: testType) => void,\r\n  reference: React.RefObject<HTMLDivElement>,\r\n  handleRefScroll: (id: number) => void,\r\n  isTestChecked: boolean\r\n}\r\n\r\nconst Matching: React.FC<Props> = ({testSet, setTestSet, reference, handleRefScroll, isTestChecked}) => {\r\n\r\n  const [focusedItem, setFocusedItem] = useState(0);\r\n\r\n  const calculateOrderNumber = () => {\r\n    const firstMatchingNumber = testSet.lengths.slice(0, 2).reduce((partialSum, a) => partialSum + a, 0);\r\n    const lastMatchingNumber = firstMatchingNumber + testSet.lengths[2];\r\n    const totalNumber = testSet.totalLength;\r\n    return firstMatchingNumber + 1 + \"-\" + lastMatchingNumber + \" of \" + totalNumber;\r\n  }\r\n\r\n  const checkIfAnswerTaken = (index: number) => {\r\n    const item = {...testSet.matching.items[index]};\r\n    const answers = testSet.matching.items.map(item => item.answer);\r\n    return answers.includes(item.term);\r\n  }\r\n\r\n  const answerItemOnClickHandler = (item: string) => {\r\n    let matchingItems = {...testSet.matching};\r\n    matchingItems.items[focusedItem].answer = item;\r\n    matchingItems.items[focusedItem].isCorrect = item === matchingItems.items[focusedItem].term;\r\n    setTestSet({...testSet, matching: matchingItems});\r\n    setFocusedItem(focusedItem + 1);\r\n\r\n    const areAllAnswered = matchingItems.items.map(item => item.answer !== null);\r\n    if (areAllAnswered.every(item => item))\r\n      handleRefScroll(testSet.lengths[0] + testSet.lengths[1]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setFocusedItem(0);\r\n  }, [isTestChecked])\r\n\r\n  return (\r\n      <Container ref={reference}>\r\n        <ComponentTitle>Match term to definition</ComponentTitle>\r\n        <ComponentHeader>Select a term to match it with its definition</ComponentHeader>\r\n        <div>{isTestChecked ? <CheckedPart matchingTest={testSet.matching}/> : <>\r\n          <DefinitionsPart>\r\n            {testSet.matching.items.map((item, index) => {\r\n              return <DefinitionsItem\r\n                  key={item.id}\r\n                  testItem={item}\r\n                  index={index}\r\n                  focusedItem={focusedItem}\r\n                  setFocusedItem={setFocusedItem}\r\n                  isNoAnswers={testSet.matching.items.filter(item => item.answer !== null).length === 0}\r\n                  testSet={testSet}\r\n                  setTestSet={setTestSet}\r\n              />\r\n            })}\r\n          </DefinitionsPart>\r\n          <AnswersPart>\r\n            {testSet.matching.answers\r\n                .map(item => {\r\n                  return <AnswerItemContainer\r\n                      key={item.answer}\r\n                      isTaken={checkIfAnswerTaken(item.index)}\r\n                      onClick={() => answerItemOnClickHandler(item.answer)}\r\n                  >\r\n                    <AnswerItemWrap>\r\n                      <AnswerItemContent>\r\n                        <TextFormater>{item.answer}</TextFormater>\r\n                      </AnswerItemContent>\r\n                    </AnswerItemWrap>\r\n                  </AnswerItemContainer>\r\n                })}\r\n          </AnswersPart>\r\n        </>}\r\n        </div>\r\n        <NumberContainer>\r\n          <NumberContent>{calculateOrderNumber()}</NumberContent>\r\n        </NumberContainer>\r\n      </Container>\r\n  );\r\n};\r\n\r\nexport default Matching;","import styled from \"styled-components\";\r\nimport colors from \"../../../assets/colors\";\r\n\r\nexport const AnswersPart = styled.div`\r\n    -webkit-box-flex: 0;\r\n    -ms-flex-positive: 0;\r\n    -webkit-flex-grow: 0;\r\n    flex-grow: 0;\r\n    width: 100%;\r\n    z-index: 1;\r\n`\r\nexport const AsnwerTitleContainer = styled.section`\r\n    color: ${colors.gray600};\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.5;\r\n    margin-bottom: 1.5rem;\r\n    @media (max-width: 38.75rem) {\r\n        padding-bottom: 1rem;\r\n    }\r\n    @media (max-width: 48rem) {\r\n        padding-bottom: 1rem;\r\n    }\r\n`\r\nexport const AnswerContainer = styled.div`\r\n    display: grid;\r\n    gap: 1.5rem;\r\n    grid-template-columns: 1fr 1fr;\r\n    @media (max-width: 38.75rem){\r\n        grid-template-columns: 1fr;\r\n    }\r\n`","import React from 'react'\r\nimport { multipleChoiseTest } from '../../../types/test-page.types'\r\nimport termTypes from '../../../types/term.types';\r\nimport AnswerItem from \"../../../layouts/answer-item.styles\";\r\nimport { AsnwerTitleContainer, AnswerContainer } from './multiple-choice.styles';\r\nimport { AiOutlineCheck } from \"react-icons/ai\";\r\nimport colors from \"../../../assets/colors\";\r\nimport { FiX } from 'react-icons/fi';\r\n\r\ninterface Props {\r\n    testItem: multipleChoiseTest\r\n}\r\n\r\nconst CheckedPart: React.FC<Props> = ({ testItem }) => {\r\n\r\n    const {\r\n        term,\r\n        isCorrect,\r\n        answer,\r\n    } = testItem;\r\n\r\n    if (isCorrect) return <>\r\n        <AsnwerTitleContainer style={{color: colors.green400}}>\r\n            <div>Awesome!</div>\r\n        </AsnwerTitleContainer>\r\n        <AnswerContainer>\r\n            {testItem.possibleAnswers.map((item: termTypes) => (\r\n                <AnswerItem\r\n                    key={item.term}\r\n                    tabIndex={0}\r\n                    color={item.term === term ? colors.green400 : undefined}\r\n                    bgColor={item.term === term ? colors.green100 : undefined}\r\n                    removeHover\r\n                >\r\n                    {item.term === term && <AiOutlineCheck style={{ color: colors.green400, marginRight: \".625rem\" }} />}\r\n                    {item.term}\r\n                </AnswerItem>\r\n            ))}\r\n        </AnswerContainer>\r\n    </>\r\n\r\n    if (!isCorrect && answer) return <>\r\n        <AsnwerTitleContainer style={{color: colors.coral300}}>\r\n            <div>Not quite. You're still learning!</div>\r\n        </AsnwerTitleContainer>\r\n        <AnswerContainer>\r\n            {testItem.possibleAnswers.map((item: termTypes) => (\r\n                <AnswerItem\r\n                    key={item.term}\r\n                    tabIndex={0}\r\n                    color={item.term === term ?\r\n                        colors.green400 :\r\n                        item.term === answer ?\r\n                        colors.coral300 : undefined\r\n                    }\r\n                    bgColor={item.term === term ? colors.green100 : undefined}\r\n                    removeHover\r\n                >\r\n                    {item.term === term && <AiOutlineCheck style={{ color: colors.green400, marginRight: \".625rem\" }} />}\r\n                    {item.term === answer && <FiX style={{ color: colors.coral300, marginRight: \".625rem\" }} />}\r\n                    {item.term}\r\n                </AnswerItem>\r\n            ))}\r\n        </AnswerContainer>\r\n    </>\r\n\r\n\r\n    return (\r\n        <>\r\n            <AsnwerTitleContainer style={{color: colors.UIColorGray60}}>\r\n                <div>Give this one a go later!</div>\r\n            </AsnwerTitleContainer>\r\n            <AnswerContainer>\r\n                {testItem.possibleAnswers.map((item: termTypes) => (\r\n                    <AnswerItem\r\n                        key={item.term}\r\n                        tabIndex={0}\r\n                        color={item.term === term ? colors.UIColorGray60 : undefined}\r\n                        style={{color: item.term !== term ? colors.UIColorGray60 : undefined}}\r\n                        removeHover\r\n                    >\r\n                        {item.term === term && <AiOutlineCheck style={{ color: colors.UIColorGray60, marginRight: \".625rem\" }} />}\r\n                        {item.term}\r\n                    </AnswerItem>\r\n                ))}\r\n            </AnswerContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CheckedPart","import React, { FC, useState } from 'react';\r\nimport termTypes from '../../../types/term.types';\r\nimport { testType } from '../../../types/test-page.types';\r\nimport {\r\n  Container,\r\n  NumberContainer,\r\n  NumberContent,\r\n  TitleCenter,\r\n  TitleEnd,\r\n  TitleWrap,\r\n  WordTitle,\r\n  WordTitleContainer,\r\n  WordTitleWrap,\r\n  Word,\r\n  WordContainer,\r\n  WordHandler,\r\n  TopPart\r\n} from '../test-page.styles';\r\nimport CheckedPart from './checked-part';\r\nimport {\r\n  AnswersPart,\r\n  AsnwerTitleContainer,\r\n  AnswerContainer\r\n} from './multiple-choice.styles';\r\nimport AnswerItem from '../../../layouts/answer-item.styles';\r\n\r\ninterface Props {\r\n  index: number,\r\n  testSet: testType,\r\n  setTestSet: (testSet: testType) => void,\r\n  reference: React.RefObject<HTMLDivElement>,\r\n  handleRefScroll: (id: number) => void,\r\n  isTestChecked: boolean\r\n}\r\n\r\nconst MultipleChoice: FC<Props> = ({ testSet, index, setTestSet, reference, handleRefScroll, isTestChecked }) => {\r\n\r\n  const [focusValue, setFocusValue] = useState<string | null>(null);\r\n\r\n  const toggleFocus = (value: string) => {\r\n    let localFocusValue = focusValue === value ? null : value;\r\n    setFocusValue(localFocusValue);\r\n\r\n    let multipleChoiceItems = [...testSet.multipleChoice];\r\n    let testItem = { ...testSet.multipleChoice[index] };;\r\n    if (localFocusValue) {\r\n      testItem.isCorrect = testItem.term === localFocusValue;\r\n      testItem.answer = localFocusValue;\r\n      handleRefScroll(testSet.lengths[0] + index);\r\n    } else {\r\n      testItem.isCorrect = false;\r\n      testItem.answer = null;\r\n    }\r\n    multipleChoiceItems[index] = testItem;\r\n    setTestSet({ ...testSet, multipleChoice: multipleChoiceItems });\r\n  }\r\n\r\n  return (\r\n    <Container ref={reference} style={{ marginTop: \"2rem\" }} tabIndex={-1}>\r\n      <TopPart>\r\n        <WordTitleWrap>\r\n          <WordTitleContainer>\r\n            <TitleWrap>\r\n              <WordTitle>Definition</WordTitle>\r\n            </TitleWrap>\r\n            <TitleCenter />\r\n            <TitleEnd />\r\n          </WordTitleContainer>\r\n        </WordTitleWrap>\r\n        <WordContainer>\r\n          <WordHandler>\r\n            <Word>\r\n              <div>{testSet.multipleChoice[index].definition}</div>\r\n            </Word>\r\n          </WordHandler>\r\n        </WordContainer>\r\n      </TopPart>\r\n      <AnswersPart>\r\n        {isTestChecked ? <CheckedPart testItem={testSet.multipleChoice[index]} /> : <>\r\n          <AsnwerTitleContainer>\r\n            <div>Select the correct term</div>\r\n          </AsnwerTitleContainer>\r\n          <AnswerContainer>\r\n            {testSet.multipleChoice[index].possibleAnswers.map((item: termTypes) => (\r\n              <AnswerItem\r\n                key={item.term}\r\n                tabIndex={0}\r\n                isFocus={focusValue === item.term}\r\n                onClick={() => toggleFocus(item.term)}\r\n              >\r\n                {item.term}\r\n              </AnswerItem>\r\n            ))}\r\n          </AnswerContainer>\r\n        </>}\r\n      </AnswersPart>\r\n      <NumberContainer>\r\n        <NumberContent>{(testSet.lengths[0] + index + 1) + \" of \" + testSet.totalLength}</NumberContent>\r\n      </NumberContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MultipleChoice;","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10, _path11, _path12;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSubmitTestBg(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 227,\n    height: 88,\n    viewBox: \"0 0 227 88\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M226.807 27.6147C227.44 25.9503 226.427 24.67 225.034 23.6458C223.641 22.4935 221.995 23.1336 220.475 23.6458C219.336 24.0299 218.069 24.542 217.056 25.0541C210.218 29.1511 204.139 33.6322 198.44 38.6254C195.908 40.93 193.122 42.9785 190.336 45.1551C189.576 45.7952 188.563 46.0513 187.423 46.6915C187.296 46.0513 187.17 45.6672 187.17 45.4112C187.676 40.546 188.309 35.8087 188.943 30.9435C188.943 30.6874 189.069 30.4314 189.069 30.1754C188.943 27.7427 185.523 26.3344 182.737 27.4867C178.432 29.2792 174.886 31.8398 171.467 34.5285C167.161 38.1133 162.982 41.6982 158.803 45.4112C157.41 46.5634 155.89 47.4596 153.484 48.4839C154.624 43.7467 155.637 39.5217 156.65 35.2966C156.903 34.1443 156.777 32.864 156.903 31.5837C157.03 29.4071 155.764 27.9988 153.358 27.1026C151.331 27.2306 149.558 27.8708 147.912 28.767C141.707 32.48 135.882 36.3209 130.943 41.058C127.144 44.6429 123.091 47.9718 118.912 51.3006C118.279 51.8127 117.519 52.837 116 52.4529C115.873 52.1968 115.366 51.8127 115.493 51.5567C116.633 48.2278 117.013 45.027 116.126 41.6982C116 41.1861 116.253 40.674 116.38 40.2899C117.519 36.705 116.506 33.3762 114.987 30.0474C114.1 28.1269 111.441 27.2306 108.781 27.6147C103.463 28.2549 99.0303 30.3034 95.3578 33.2481C90.9255 36.705 86.8731 40.4179 82.6941 44.0028C80.1613 46.1793 77.8818 48.3559 75.4757 50.5324C74.336 51.5567 73.1963 52.5809 71.4234 53.3491C70.6636 51.6847 71.2967 50.4043 71.55 49.124C72.3098 45.6672 72.943 42.2104 73.5762 38.7535C73.9561 36.705 72.8163 34.9125 71.6766 33.1201C71.0434 32.0958 69.6504 31.7117 68.3841 32.2238C66.8644 32.864 65.2181 33.2481 63.9518 34.4004C62.5588 35.6807 60.7859 36.4489 59.1396 37.4732C58.633 37.7292 57.9998 37.9853 57.7465 38.3694C56.2269 40.802 53.4409 42.3383 51.4147 44.3868C49.2618 46.4353 46.7291 48.0998 44.5763 50.1483C43.0567 51.5566 41.537 52.965 39.8907 54.3734C39.3842 54.7575 38.8776 55.3976 37.6113 55.0135C37.4846 53.4772 37.358 51.9407 37.2314 50.4043C37.1047 48.6119 37.2313 46.9475 36.8514 45.1551C36.3448 42.9785 35.4584 40.802 32.5458 39.3937C31.9126 39.6497 31.0261 39.9058 30.5195 40.2899C27.9868 41.8263 25.5807 43.4906 23.048 45.027C21.2751 46.1793 19.3755 47.0755 17.7292 48.2278C12.2838 52.3248 6.83842 56.4219 1.39302 60.5189C0.886468 60.903 0.506549 61.5431 0 62.1833C1.13973 63.0795 2.27948 63.9757 3.41922 65C5.69869 62.5674 8.10478 60.6469 10.7642 58.8545C14.6899 56.1658 18.9955 53.7332 22.2881 50.5324C24.8209 47.9718 28.62 47.3316 31.6593 45.7952C32.4191 49.1241 33.179 52.3248 34.0654 55.5256C34.8253 58.0863 36.3449 59.6227 39.2575 61.159C40.144 60.3909 41.0305 59.4946 42.0436 58.7264C43.3099 57.7022 44.8296 57.062 45.2095 55.5256C45.3361 55.2696 45.8427 54.7575 46.096 54.7575C47.7422 54.6294 47.9955 53.6052 48.7553 52.837C49.1352 52.3249 49.7684 51.8127 50.4016 51.5567C51.5413 51.0445 52.3011 50.2763 52.9343 49.3801C53.1876 48.868 53.9474 48.4839 54.454 47.9718C58.5064 45.1551 62.4321 42.2104 66.4845 39.3937C66.8644 39.1376 67.4976 38.8815 68.1308 38.6254C68.8906 40.5459 68.3841 42.0823 68.0042 43.6187C67.2444 47.0755 65.978 50.4043 66.3579 53.9892C66.6112 56.2938 68.2574 58.0863 70.6635 58.9825C72.943 59.8787 74.4627 58.0863 75.8557 56.934C76.6155 56.4219 77.2487 55.9097 77.8819 55.2695C81.3011 52.0687 84.7203 48.996 87.8862 45.7952C93.4583 40.2899 100.677 36.4489 108.401 32.9921C109.541 32.4799 110.807 32.2239 112.201 32.9921C112.327 33.3762 112.58 33.8883 112.58 34.4004C112.58 39.6497 112.074 44.899 110.681 50.0203C110.048 52.3248 110.428 54.2453 111.947 56.0378C112.454 56.806 113.087 57.5742 113.594 58.2143C120.305 57.7022 121.572 57.062 125.244 53.2211C125.624 52.837 126.131 52.4529 126.637 52.1968C128.917 51.0445 130.31 49.3801 131.956 47.9718C134.109 46.0513 135.755 43.6187 138.794 42.2104C139.301 41.9543 139.807 41.5702 140.061 41.058C140.947 39.3936 143.1 38.4974 144.746 37.3451C146.519 36.1928 148.165 35.1686 150.065 34.1443C150.445 33.8882 150.952 33.8883 151.838 33.6322C152.724 35.6807 151.965 37.3452 151.458 39.0096C150.445 42.0823 149.432 45.2831 148.419 48.4839C147.786 50.4043 147.912 52.1968 149.432 53.8612C149.938 54.3733 150.951 54.8855 151.711 55.0135C154.371 55.5257 156.524 54.6294 158.296 53.2211C161.336 50.7885 163.869 48.0998 167.414 46.0513C167.921 45.7953 168.301 45.2831 168.554 44.899C169.187 44.1308 169.82 43.6187 170.834 43.1065C171.847 42.5944 172.733 41.6982 173.62 41.058C176.279 38.8815 178.812 36.5769 181.471 34.4004C181.978 34.0163 182.864 34.0163 183.751 33.6322C183.877 34.4004 184.004 34.9125 184.004 35.4246C183.624 38.2413 183.371 41.1861 182.864 44.0028C182.484 46.1793 182.864 48.2278 184.004 50.1483C184.637 51.3006 187.043 52.3248 188.436 51.9407C191.475 51.0445 194.515 50.4043 196.668 48.2278C198.694 46.3073 200.593 44.2588 202.746 42.4664C204.899 40.6739 207.432 39.0095 209.711 37.2171C211.991 35.4247 214.017 33.5042 216.296 31.8397C217.563 30.8155 219.209 29.9193 221.488 30.4314C219.969 34.5284 218.576 38.4974 217.056 42.3384C216.55 43.7467 216.676 45.027 217.816 46.1793C218.829 47.2036 220.222 47.3316 221.995 47.0756C222.628 46.1793 223.135 45.1551 223.895 44.1308C225.541 42.2104 225.794 40.1618 224.908 38.1133C224.274 36.705 224.401 35.5527 225.034 34.1443C225.414 31.7117 226.047 29.6632 226.807 27.6147Z\",\n    fill: \"#DBDFFF\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M85.2031 18.0713C85.2031 15.0337 87.6656 12.5713 90.7031 12.5713H129.989C133.026 12.5713 135.489 15.0337 135.489 18.0713V69.9284C135.489 72.966 133.026 75.4284 129.989 75.4284H90.7031C87.6656 75.4284 85.2031 72.966 85.2031 69.9284V18.0713Z\",\n    fill: \"#F7D9FF\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M95.037 30.1993L93.3979 28.4901C93.0212 28.0972 92.4043 28.0972 92.0276 28.4901C91.6601 28.8733 91.6601 29.4866 92.0276 29.8699L94.3545 32.2962C94.7312 32.6891 95.348 32.6891 95.7248 32.2962L101.614 26.1549C101.982 25.7717 101.982 25.1584 101.614 24.7751C101.238 24.3823 100.621 24.3823 100.244 24.7749L95.037 30.1993Z\",\n    fill: \"#E372FF\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M102.083 24.3259C102.691 24.9602 102.691 25.9696 102.083 26.6039L96.1934 32.7452C95.5613 33.4044 94.5187 33.4044 93.8866 32.7452L91.5597 30.3189C90.9514 29.6846 90.9514 28.6752 91.5597 28.0409C92.1918 27.3817 93.2344 27.3817 93.8666 28.0409L95.0376 29.262L99.7764 24.3257C100.409 23.6668 101.451 23.6668 102.083 24.3259ZM100.245 24.7748C100.621 24.3822 101.238 24.3822 101.615 24.775C101.982 25.1583 101.982 25.7716 101.615 26.1548L95.7251 32.2962C95.3484 32.689 94.7316 32.689 94.3549 32.2962L92.028 29.8698C91.6605 29.4865 91.6605 28.8732 92.028 28.49C92.4047 28.0971 93.0216 28.0971 93.3983 28.49L95.0374 30.1992L100.245 24.7748Z\",\n    fill: \"#E372FF\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M107.752 28.3736C107.752 27.1209 108.767 26.1055 110.02 26.1055L127.321 26.1055C128.574 26.1055 129.59 27.1209 129.59 28.3736C129.59 29.6262 128.574 30.6417 127.321 30.6417L110.02 30.6417C108.767 30.6417 107.752 29.6262 107.752 28.3736Z\",\n    fill: \"#E372FF\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M95.037 45.8931L93.3979 44.1839C93.0212 43.7911 92.4043 43.7911 92.0276 44.1839C91.6601 44.5672 91.6601 45.1805 92.0276 45.5637L94.3545 47.9901C94.7312 48.3829 95.348 48.3829 95.7248 47.9901L101.614 41.8488C101.982 41.4655 101.982 40.8522 101.614 40.4689C101.238 40.0762 100.621 40.0761 100.244 40.4688L95.037 45.8931Z\",\n    fill: \"#E372FF\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M102.083 40.0198C102.691 40.654 102.691 41.6635 102.083 42.2978L96.1934 48.4391C95.5613 49.0982 94.5187 49.0982 93.8866 48.4391L91.5597 46.0127C90.9514 45.3785 90.9514 44.369 91.5597 43.7347C92.1918 43.0756 93.2344 43.0756 93.8666 43.7347L95.0376 44.9558L99.7764 40.0195C100.409 39.3606 101.451 39.3607 102.083 40.0198ZM100.245 40.4687C100.621 40.076 101.238 40.0761 101.615 40.4688C101.982 40.8521 101.982 41.4654 101.615 41.8487L95.7251 47.99C95.3484 48.3828 94.7316 48.3828 94.3549 47.99L92.028 45.5637C91.6605 45.1804 91.6605 44.5671 92.028 44.1838C92.4047 43.791 93.0216 43.791 93.3983 44.1838L95.0374 45.893L100.245 40.4687Z\",\n    fill: \"#E372FF\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M107.752 44.0674C107.752 42.8148 108.767 41.7993 110.02 41.7993H127.321C128.574 41.7993 129.59 42.8148 129.59 44.0674C129.59 45.3201 128.574 46.3355 127.321 46.3355H110.02C108.767 46.3355 107.752 45.3201 107.752 44.0674Z\",\n    fill: \"#E372FF\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M91.1035 58.5537C91.1035 57.0349 92.3347 55.8037 93.8535 55.8037H126.839C128.358 55.8037 129.589 57.0349 129.589 58.5537V65.6251C129.589 67.1439 128.358 68.3751 126.839 68.3751H93.8535C92.3347 68.3751 91.1035 67.1439 91.1035 65.6251V58.5537Z\",\n    fill: \"#FCF0FF\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M112.371 50.2245L121.34 59.1935L147.613 32.9203C148.12 32.4126 148.405 31.7245 148.405 31.0071C148.405 30.2897 148.12 29.6016 147.613 29.0939L142.471 23.9538C142.22 23.7022 141.921 23.5026 141.593 23.3664C141.265 23.2303 140.913 23.1602 140.557 23.1602C140.202 23.1602 139.85 23.2303 139.522 23.3664C139.194 23.5026 138.895 23.7022 138.644 23.9538L112.371 50.2245Z\",\n    fill: \"#A533FF\"\n  })), _path11 || (_path11 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M109.477 57.1161L112.372 50.2236L121.338 59.1926L114.015 61.8564C113.663 60.7759 113.073 59.7886 112.287 58.9678C111.501 58.1471 110.541 57.5141 109.477 57.1161Z\",\n    fill: \"#FFC38C\"\n  })), _path12 || (_path12 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M106.905 63.2336L109.476 57.1162C110.541 57.5143 111.501 58.1472 112.287 58.968C113.073 59.7887 113.663 60.7761 114.014 61.8566L107.761 64.1305C107.637 64.175 107.503 64.1826 107.375 64.1525C107.248 64.1223 107.131 64.0557 107.041 63.9607C106.95 63.8657 106.889 63.7464 106.865 63.6173C106.841 63.4882 106.855 63.3549 106.905 63.2336Z\",\n    fill: \"#002C6D\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSubmitTestBg);\nexport default __webpack_public_path__ + \"static/media/submit-test-bg.05a527b6537677bbaf57867f99d1296b.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\r\nimport submitTestBg from \"../../../assets/images/submit-test-bg.svg\";\r\n\r\nexport const Container = styled.section`\r\n    margin: 1rem auto 0;\r\n    max-width: 52.5rem;\r\n    padding: 0 2rem;\r\n    position: relative;\r\n    -webkit-box-pack: space-around;\r\n    -ms-flex-pack: space-around;\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    -webkit-align-items: center;\r\n    align-items: center;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-direction: column;\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n    -webkit-justify-content: space-around;\r\n    justify-content: space-around;\r\n    margin-top: 4rem;\r\n    padding-bottom: 1.875rem;\r\n    text-align: center;\r\n    @media (max-width: 38.75rem){\r\n        margin-top: 0;\r\n        padding: 0 1rem 2rem;\r\n    }\r\n    @media (max-width: 48rem) {\r\n        margin-top: 1rem;\r\n    }\r\n`\r\nexport const BackgroundImage = styled.section`\r\n    background-image: url(${submitTestBg});\r\n    background-position: 50%;\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    height: 4rem;\r\n    width: 50%;\r\n    margin-bottom: 2.625rem;\r\n`\r\nexport const H3 = styled.h3`\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.3333333333333333;\r\n    margin-bottom: 2.625rem;\r\n`","import React, {useContext} from 'react'\r\nimport BlueButton from \"../../../layouts/blue-button.styles\";\r\nimport { BackgroundImage, Container, H3 } from './submit-section.styles'\r\nimport AuthContext from \"../../../context/auth-context\";\r\n\r\ninterface Props {\r\n    setIsTestChecked: (isChecked: boolean) => void\r\n}\r\n\r\nconst SubmitSection: React.FC<Props> = ({ setIsTestChecked }) => {\r\n\r\n    const {setProgressBarWidth} = useContext(AuthContext);\r\n\r\n    const handleSubmitClick = () => {\r\n        setIsTestChecked(true);\r\n        window.scrollTo({top: 0, left: 0, behavior: 'smooth'});\r\n        setProgressBarWidth(100);\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <BackgroundImage />\r\n            <H3>All done! Ready to submit your test?</H3>\r\n            <BlueButton\r\n                padding={\"1.25rem 2rem\"}\r\n                radius={\".5rem\"}\r\n                fontSize={\"1rem\"}\r\n                onClick={handleSubmitClick}\r\n            >\r\n                Submit test\r\n            </BlueButton>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default SubmitSection","import styled from \"styled-components\";\r\nimport colors from \"../../../assets/colors\";\r\n\r\nexport const Container = styled.section`\r\n    margin: 0 auto;\r\n    max-width: 52.5rem;\r\n    padding: 0 2rem;\r\n    @media (max-width: 38.75rem) {\r\n        margin-top: 0;\r\n        padding: 2rem 1rem;\r\n    }\r\n    @media (max-width: 48rem) {\r\n        margin-top: 2rem;\r\n    }\r\n`\r\nexport const ContentWrap = styled.article`\r\n    -webkit-box-pack: center;\r\n    -ms-flex-pack: center;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-justify-content: center;\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n    max-width: 50rem;\r\n    @media (max-width: 38.75rem) {\r\n        -webkit-flex-direction: row;\r\n        -ms-flex-direction: row;\r\n        flex-direction: row;\r\n        overflow: hidden;\r\n        padding: 0 1rem;\r\n    }\r\n    @media (max-width: 64rem) {\r\n        -webkit-flex-direction: column-reverse;\r\n        -ms-flex-direction: column-reverse;\r\n        flex-direction: column-reverse;\r\n    }\r\n`\r\nexport const ContentDivision = styled.div`\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    -webkit-align-items: center;\r\n    align-items: center;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-direction: column;\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n    gap: 1.5rem;\r\n    width: 100%;\r\n    @media (max-width: 38.75rem) {\r\n        padding: 0;\r\n    }\r\n`\r\nexport const ContentContainer = styled.div`\r\n    -webkit-box-pack: justify;\r\n    -ms-flex-pack: justify;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-flow: row wrap;\r\n    -ms-flex-flow: row wrap;\r\n    flex-flow: row wrap;\r\n    gap: 0.5rem;\r\n    -webkit-justify-content: space-between;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    @media (max-width: 38.75rem) {\r\n        -webkit-flex-direction: row;\r\n        -ms-flex-direction: row;\r\n        flex-direction: row;\r\n        margin-top: 1rem;\r\n    }\r\n    @media (max-width: 48rem) {\r\n        -webkit-flex-direction: column;\r\n        -ms-flex-direction: column;\r\n        flex-direction: column;\r\n        gap: 1.5rem;\r\n    }\r\n`\r\nexport const ContentItemContainer = styled.div`\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex: 1;\r\n    -ms-flex: 1;\r\n    flex: 1;\r\n    -webkit-flex-direction: column;\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n    @media (max-width: 28.75rem){\r\n        max-width: 100%;\r\n    }\r\n`\r\nexport const ContentItemHeader = styled.div`\r\n    color: ${colors.gray600};\r\n    font-size: 1.25rem;\r\n    font-weight: 700;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.4;\r\n`\r\nexport const TopItemContentWrap = styled.div`\r\n    margin-top: 1rem;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-direction: row;\r\n    -ms-flex-direction: row;\r\n    flex-direction: row;\r\n`\r\nexport const ResultContainer = styled.div`\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-direction: row;\r\n    -ms-flex-direction: row;\r\n    flex-direction: row;\r\n    margin-left: 2rem;\r\n    @media (max-width: 28.75rem){\r\n        margin-left: 1rem;\r\n    }\r\n`\r\nexport const ResultLefItem = styled.div`\r\n    -webkit-box-pack: space-evenly;\r\n    -ms-flex-pack: space-evenly;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-direction: column;\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n    font-size: 1.25rem;\r\n    font-weight: 600;\r\n    -webkit-justify-content: space-evenly;\r\n    justify-content: space-evenly;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.4;\r\n`\r\nexport const ResultRightItem = styled.div`\r\n    -webkit-box-pack: space-evenly;\r\n    -ms-flex-pack: space-evenly;\r\n    color: #59e8b5;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-direction: column;\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n    font-size: 1.25rem;\r\n    font-weight: 600;\r\n    -webkit-justify-content: space-evenly;\r\n    justify-content: space-evenly;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.4;\r\n    margin-left: 3rem;\r\n    @media (max-width: 28.75rem){\r\n        margin-left: 2rem;\r\n    }\r\n`\r\nexport const NumberOfAnswers = styled.div<{ isCorrect?: boolean }>`\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    -webkit-box-pack: center;\r\n    -ms-flex-pack: center;\r\n    -webkit-align-items: center;\r\n    align-items: center;\r\n    border: 0.0625rem solid ${colors.UIColorGray};\r\n    border-radius: 1.125rem;\r\n    color: ${colors.gray600};\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-direction: row;\r\n    -ms-flex-direction: row;\r\n    flex-direction: row;\r\n    height: 1.75rem;\r\n    -webkit-justify-content: center;\r\n    justify-content: center;\r\n    width: 3rem;\r\n    ${props => props.isCorrect ? `\r\n        background: #e6fcf4;\r\n        border-color: #98f1d1;\r\n        color: ${colors.mint500}\r\n    `: `\r\n    background: #fff6ef;\r\n    border-color: #ffc38c;\r\n    color: ${colors.sherbert500}\r\n    `}\r\n`\r\nexport const SecondPartContent = styled.div`\r\n    -webkit-box-pack: justify;\r\n    -ms-flex-pack: justify;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-direction: column;\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n    -webkit-justify-content: space-between;\r\n    justify-content: space-between;\r\n    margin-top: 0.5rem;\r\n    @media (max-width: 48rem){\r\n        -webkit-flex-direction: row;\r\n        -ms-flex-direction: row;\r\n        flex-direction: row;\r\n    }\r\n    @media (max-width: 38.75rem){\r\n        -webkit-flex-direction: column;\r\n        -ms-flex-direction: column;\r\n        flex-direction: column;\r\n    }\r\n`\r\nexport const ReferenceItemContainer = styled.article`\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    -webkit-box-pack: start;\r\n    -ms-flex-pack: start;\r\n    -webkit-align-items: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    background-color: ${colors.whiteColor};\r\n    border: 0.125rem solid ${colors.pageBackgroundColor};\r\n    border-radius: 0.5rem;\r\n    box-shadow: 0 0.25rem 1rem rgb(48 53 69 / 8%);\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-direction: row;\r\n    -ms-flex-direction: row;\r\n    flex-direction: row;\r\n    -webkit-justify-content: flex-start;\r\n    justify-content: flex-start;\r\n    min-height: 6.25rem;\r\n    overflow: hidden;\r\n    padding: 1rem;\r\n    margin-top: 1rem;\r\n    @media (max-width: 48rem){\r\n        max-width: 19.75rem;\r\n    }\r\n    @media (max-width: 38.75rem) {\r\n        min-height: 4.75rem;\r\n        width: 100%;\r\n        max-width: unset;\r\n    }\r\n`\r\nexport const IconContainer = styled.div`\r\n    -ms-flex-negative: 0;\r\n    -webkit-flex-shrink: 0;\r\n    flex-shrink: 0;\r\n    position: relative;\r\n`\r\nexport const IconContent = styled.div<{img: string}>`\r\n    background-position: 50%;\r\n    background-repeat: no-repeat;\r\n    background-size: contain;\r\n    height: 4rem;\r\n    width: 4rem;\r\n    background-image: url(${props => props.img});\r\n`\r\nexport const RefMainContent = styled.div`\r\n    -webkit-box-flex: 4;\r\n    -ms-flex-positive: 4;\r\n    -webkit-box-pack: center;\r\n    -ms-flex-pack: center;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-direction: column;\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n    -webkit-flex-grow: 4;\r\n    flex-grow: 4;\r\n    -webkit-justify-content: center;\r\n    justify-content: center;\r\n    margin-left: 1rem;\r\n`\r\nexport const RefMainHeader = styled.div`\r\n    color: ${colors.mainBlueColor};\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.5;\r\n`\r\nexport const RefMainText = styled.div`\r\n    color: ${colors.textGray800};\r\n    font-size: .875rem;\r\n    font-weight: 400;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.4285714285714286;\r\n    margin-top: 0.5rem;\r\n`","import * as React from 'react';\nimport { VIEWBOX_CENTER_X, VIEWBOX_CENTER_Y } from './constants';\n\nfunction Path({\n  className,\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n  strokeWidth,\n  style,\n}: {\n  className?: string;\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n  strokeWidth: number;\n  style?: object;\n}) {\n  return (\n    <path\n      className={className}\n      style={Object.assign({}, style, getDashStyle({ pathRadius, dashRatio, counterClockwise }))}\n      d={getPathDescription({\n        pathRadius,\n        counterClockwise,\n      })}\n      strokeWidth={strokeWidth}\n      fillOpacity={0}\n    />\n  );\n}\n\n// SVG path description specifies how the path should be drawn\nfunction getPathDescription({\n  pathRadius,\n  counterClockwise,\n}: {\n  pathRadius: number;\n  counterClockwise: boolean;\n}) {\n  const radius = pathRadius;\n  const rotation = counterClockwise ? 1 : 0;\n\n  // Move to center of canvas\n  // Relative move to top canvas\n  // Relative arc to bottom of canvas\n  // Relative arc to top of canvas\n  return `\n      M ${VIEWBOX_CENTER_X},${VIEWBOX_CENTER_Y}\n      m 0,-${radius}\n      a ${radius},${radius} ${rotation} 1 1 0,${2 * radius}\n      a ${radius},${radius} ${rotation} 1 1 0,-${2 * radius}\n    `;\n}\n\nfunction getDashStyle({\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n}: {\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n}) {\n  const diameter = Math.PI * 2 * pathRadius;\n  const gapLength = (1 - dashRatio) * diameter;\n\n  return {\n    // Have dash be full diameter, and gap be full diameter\n    strokeDasharray: `${diameter}px ${diameter}px`,\n    // Shift dash backward by gapLength, so gap starts appearing at correct distance\n    strokeDashoffset: `${counterClockwise ? -gapLength : gapLength}px`,\n  };\n}\n\nexport default Path;\n","import * as React from 'react';\n\nimport {\n  VIEWBOX_WIDTH,\n  VIEWBOX_HEIGHT,\n  VIEWBOX_HEIGHT_HALF,\n  VIEWBOX_CENTER_X,\n  VIEWBOX_CENTER_Y,\n} from './constants';\nimport Path from './Path';\nimport { CircularProgressbarDefaultProps, CircularProgressbarProps } from './types';\n\nclass CircularProgressbar extends React.Component<CircularProgressbarProps> {\n  static defaultProps: CircularProgressbarDefaultProps = {\n    background: false,\n    backgroundPadding: 0,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background',\n    },\n    counterClockwise: false,\n    className: '',\n    maxValue: 100,\n    minValue: 0,\n    strokeWidth: 8,\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {},\n    },\n    text: '',\n  };\n\n  getBackgroundPadding() {\n    if (!this.props.background) {\n      // Don't add padding if not displaying background\n      return 0;\n    }\n    return this.props.backgroundPadding;\n  }\n\n  getPathRadius() {\n    // The radius of the path is defined to be in the middle, so in order for the path to\n    // fit perfectly inside the 100x100 viewBox, need to subtract half the strokeWidth\n    return VIEWBOX_HEIGHT_HALF - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  }\n\n  // Ratio of path length to trail length, as a value between 0 and 1\n  getPathRatio() {\n    const { value, minValue, maxValue } = this.props;\n    const boundedValue = Math.min(Math.max(value, minValue), maxValue);\n    return (boundedValue - minValue) / (maxValue - minValue);\n  }\n\n  render() {\n    const {\n      circleRatio,\n      className,\n      classes,\n      counterClockwise,\n      styles,\n      strokeWidth,\n      text,\n    } = this.props;\n\n    const pathRadius = this.getPathRadius();\n    const pathRatio = this.getPathRatio();\n\n    return (\n      <svg\n        className={`${classes.root} ${className}`}\n        style={styles.root}\n        viewBox={`0 0 ${VIEWBOX_WIDTH} ${VIEWBOX_HEIGHT}`}\n        data-test-id=\"CircularProgressbar\"\n      >\n        {this.props.background ? (\n          <circle\n            className={classes.background}\n            style={styles.background}\n            cx={VIEWBOX_CENTER_X}\n            cy={VIEWBOX_CENTER_Y}\n            r={VIEWBOX_HEIGHT_HALF}\n          />\n        ) : null}\n\n        <Path\n          className={classes.trail}\n          counterClockwise={counterClockwise}\n          dashRatio={circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.trail}\n        />\n\n        <Path\n          className={classes.path}\n          counterClockwise={counterClockwise}\n          dashRatio={pathRatio * circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.path}\n        />\n\n        {text ? (\n          <text\n            className={classes.text}\n            style={styles.text}\n            x={VIEWBOX_CENTER_X}\n            y={VIEWBOX_CENTER_Y}\n          >\n            {text}\n          </text>\n        ) : null}\n      </svg>\n    );\n  }\n}\n\nexport default CircularProgressbar;\n","export const VIEWBOX_WIDTH = 100;\nexport const VIEWBOX_HEIGHT = 100;\nexport const VIEWBOX_HEIGHT_HALF = 50;\nexport const VIEWBOX_CENTER_X = 50;\nexport const VIEWBOX_CENTER_Y = 50;\n","import { CircularProgressbarStyles } from './types';\n\nexport default function buildStyles({\n  rotation,\n  strokeLinecap,\n  textColor,\n  textSize,\n  pathColor,\n  pathTransition,\n  pathTransitionDuration,\n  trailColor,\n  backgroundColor,\n}: {\n  rotation?: number; // Number of turns, 0-1\n  strokeLinecap?: any;\n  textColor?: string;\n  textSize?: string | number;\n  pathColor?: string;\n  pathTransition?: string;\n  pathTransitionDuration?: number; // Measured in seconds\n  trailColor?: string;\n  backgroundColor?: string;\n}): CircularProgressbarStyles {\n  const rotationTransform = rotation == null ? undefined : `rotate(${rotation}turn)`;\n  const rotationTransformOrigin = rotation == null ? undefined : 'center center';\n\n  return {\n    root: {},\n    path: removeUndefinedValues({\n      stroke: pathColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n      transition: pathTransition,\n      transitionDuration: pathTransitionDuration == null ? undefined : `${pathTransitionDuration}s`,\n    }),\n    trail: removeUndefinedValues({\n      stroke: trailColor,\n      strokeLinecap: strokeLinecap,\n      transform: rotationTransform,\n      transformOrigin: rotationTransformOrigin,\n    }),\n    text: removeUndefinedValues({\n      fill: textColor,\n      fontSize: textSize,\n    }),\n    background: removeUndefinedValues({\n      fill: backgroundColor,\n    }),\n  };\n}\n\nfunction removeUndefinedValues(obj: { [key: string]: any }) {\n  Object.keys(obj).forEach((key: string) => {\n    if (obj[key] == null) {\n      delete obj[key];\n    }\n  });\n  return obj;\n}\n","var _path, _path2, _rect, _rect2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTestModeIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 4.66667C8 3.19391 9.19391 2 10.6667 2H19.7512C20.478 2 21.1733 2.29665 21.6762 2.82131L27.2584 8.64453C27.7343 9.141 28 9.80215 28 10.4899V23.3333C28 24.8061 26.8061 26 25.3333 26H10.6667C9.19391 26 8 24.8061 8 23.3333V4.66667Z\",\n    fill: \"#7583FF\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 8.66667C4 7.19391 5.19391 6 6.66667 6H15.7512C16.478 6 17.1733 6.29665 17.6762 6.82131L23.2584 12.6445C23.7343 13.141 24 13.8021 24 14.4899V27.3333C24 28.8061 22.8061 30 21.3333 30H6.66667C5.19391 30 4 28.8061 4 27.3333V8.66667Z\",\n    fill: \"#4255FF\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 6.6665,\n    y: 16.6665,\n    width: 10.6667,\n    height: 2.66667,\n    rx: 1.33333,\n    fill: \"white\"\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 6.6665,\n    y: 22,\n    width: 8,\n    height: 2.66667,\n    rx: 1.33333,\n    fill: \"white\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTestModeIcon);\nexport default __webpack_public_path__ + \"static/media/test-mode-icon.9d63157d4de4c53f9279d02b4020ccb2.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLearnModeIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M13.4382 3.59133C12.0988 1.86065 9.53452 1.48966 7.70851 2.73508C6.35638 3.6573 5.76474 5.22246 6.08552 6.68675C1.72912 10.8021 0.637202 17.3182 3.87885 22.5891C7.08103 27.7957 13.5062 30.1541 19.4026 28.7697C20.8007 30.185 23.1247 30.4186 24.8161 29.265C26.6593 28.0079 27.0851 25.5576 25.7315 23.8085C24.392 22.0779 21.8278 21.7069 20.0018 22.9523C19.0335 23.6127 18.4543 24.6034 18.3224 25.6523C13.907 26.5767 9.18612 24.7646 6.82903 20.932C4.48648 17.1231 5.16237 12.4327 8.17514 9.32516C9.51726 10.0007 11.2072 9.9451 12.5229 9.04779C14.366 7.79065 14.7919 5.34035 13.4382 3.59133ZM9.81309 5.54667C10.046 5.3878 10.3727 5.44596 10.5268 5.64501C10.6666 5.82565 10.6339 6.0891 10.4181 6.2363C10.1855 6.39498 9.85872 6.33693 9.70463 6.13783C9.56476 5.95711 9.59755 5.69368 9.81309 5.54667ZM22.1063 25.7638C22.3392 25.605 22.6659 25.6631 22.82 25.8622C22.9598 26.0428 22.9271 26.3063 22.7113 26.4535C22.4786 26.6122 22.1519 26.5541 21.9978 26.355C21.8579 26.1743 21.8907 25.9108 22.1063 25.7638Z\",\n    fill: \"#4255FF\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.2456 2.79324C16.3598 2.72817 15.5491 3.35107 15.4755 4.23308C15.4018 5.11817 16.1038 5.8559 16.9918 5.92113C17.5634 5.96313 18.131 6.04807 18.6884 6.17492C19.5523 6.37149 20.452 5.8782 20.6726 5.02379C20.8954 4.16068 20.3257 3.3218 19.4554 3.12375C18.7293 2.95855 17.9902 2.84794 17.2456 2.79324Z\",\n    fill: \"#7583FF\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.8609 5.60115C24.1548 5.07419 23.1287 5.17961 22.5601 5.85098C21.9804 6.53556 22.1073 7.53317 22.8262 8.06973C23.2723 8.40269 23.6892 8.76922 24.0731 9.16672C24.6844 9.7997 25.7151 9.84511 26.3856 9.27441C27.0689 8.69284 27.1237 7.68906 26.5003 7.04362C25.995 6.52042 25.4468 6.03845 24.8609 5.60115Z\",\n    fill: \"#7583FF\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M29.4953 11.9758C29.2195 11.1384 28.2915 10.698 27.4414 10.9447C26.5834 11.1937 26.0704 12.0666 26.3496 12.9144C26.5179 13.4255 26.6411 13.9473 26.7188 14.4752C26.8475 15.3498 27.6939 15.9259 28.5739 15.8117C29.4577 15.6971 30.113 14.9197 29.9835 14.0398C29.8808 13.3416 29.7178 12.6516 29.4953 11.9758Z\",\n    fill: \"#7583FF\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.4072 17.69C27.5557 17.4484 26.6304 17.8942 26.3601 18.7335C26.1951 19.246 25.9867 19.7457 25.7369 20.2271C25.3247 21.0216 25.6866 21.9633 26.5008 22.3356C27.304 22.7029 28.2874 22.3978 28.6927 21.6164C29.021 20.9837 29.295 20.3269 29.512 19.6529C29.7856 18.8034 29.2667 17.9339 28.4072 17.69Z\",\n    fill: \"#7583FF\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLearnModeIcon);\nexport default __webpack_public_path__ + \"static/media/learn-mode-icon.515c1600fdb6d710135982e9ea8af53e.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useEffect, useState} from 'react';\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  ContentContainer,\r\n  ContentDivision,\r\n  ContentItemContainer,\r\n  ContentItemHeader,\r\n  ContentWrap,\r\n  IconContainer,\r\n  IconContent,\r\n  NumberOfAnswers,\r\n  ReferenceItemContainer,\r\n  RefMainContent,\r\n  RefMainHeader,\r\n  RefMainText,\r\n  ResultContainer,\r\n  ResultLefItem,\r\n  ResultRightItem,\r\n  SecondPartContent,\r\n  TopItemContentWrap\r\n} from './test-result-component.styles'\r\nimport {CircularProgressbar, buildStyles} from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport {\r\n  matchingTest,\r\n  matchingTestItem,\r\n  multipleChoiseTest,\r\n  testType,\r\n  trueFalseTest,\r\n  writtenTest\r\n} from '../../../types/test-page.types';\r\nimport colors from '../../../assets/colors';\r\nimport testModeIcon from \"../../../assets/images/test-mode-icon.svg\";\r\nimport learnModeIcon from \"../../../assets/images/learn-mode-icon.svg\";\r\nimport generateTest from \"../test-generator\";\r\n\r\ninterface Props {\r\n  testSet: testType,\r\n  setTestSet: (set: testType) => void,\r\n  setIsTestChecked: (isChecked: boolean) => void\r\n}\r\n\r\nconst TestResultComponent: React.FC<Props> = ({testSet, setTestSet, setIsTestChecked}) => {\r\n\r\n  const {id} = useParams();\r\n  const [numberOfCorrectAnswers, setNumberOfCorrectAnswers] = useState(0);\r\n\r\n  const countCorrectAnswers = () => {\r\n    let numberOfCorrectAnswers = 0;\r\n    testSet.trueFalse.forEach(item => item.isCorrect ? numberOfCorrectAnswers++ : numberOfCorrectAnswers += 0)\r\n    testSet.multipleChoice.forEach(item => item.isCorrect ? numberOfCorrectAnswers++ : numberOfCorrectAnswers += 0)\r\n    testSet.matching.items.forEach(item => item.isCorrect ? numberOfCorrectAnswers++ : numberOfCorrectAnswers += 0)\r\n    testSet.written.forEach(item => item.isCorrect ? numberOfCorrectAnswers++ : numberOfCorrectAnswers += 0)\r\n    return numberOfCorrectAnswers;\r\n  }\r\n  const narrowToTermObject = (item: trueFalseTest | multipleChoiseTest | matchingTestItem | writtenTest) => {\r\n    return {\r\n      id: item.id,\r\n      term: item.term,\r\n      definition: item.definition,\r\n      isMarked: item.isMarked\r\n    }\r\n  }\r\n  const handleNewTestClick = () => {\r\n    const testSetIncorrectAnswers = {\r\n      trueFalse: [...testSet.trueFalse.filter(item => !item.isCorrect)],\r\n      multipleChoice: [...testSet.multipleChoice.filter(item => !item.isCorrect)],\r\n      matching: [...testSet.matching.items.filter(item => !item.isCorrect)],\r\n      written: [...testSet.written.filter(item => !item.isCorrect)]\r\n    }\r\n    let terms = [\r\n      ...testSetIncorrectAnswers.trueFalse.map(item => narrowToTermObject(item)),\r\n      ...testSetIncorrectAnswers.multipleChoice.map(item => narrowToTermObject(item)),\r\n      ...testSetIncorrectAnswers.matching.map(item => narrowToTermObject(item)),\r\n      ...testSetIncorrectAnswers.written.map(item => narrowToTermObject(item))\r\n    ]\r\n    setTestSet(generateTest(terms));\r\n    setIsTestChecked(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setNumberOfCorrectAnswers(countCorrectAnswers());\r\n  }, [])\r\n\r\n\r\n  return (\r\n      <Container>\r\n        <ContentWrap>\r\n          <ContentDivision>\r\n            <ContentContainer>\r\n              <ContentItemContainer>\r\n                <ContentItemHeader>Your time: 1 min.</ContentItemHeader>\r\n                <TopItemContentWrap>\r\n                  <div style={{width: \"6.25rem\"}}>\r\n                    <CircularProgressbar\r\n                        value={numberOfCorrectAnswers}\r\n                        maxValue={testSet.totalLength}\r\n                        text={`${Math.round(numberOfCorrectAnswers * 100 / testSet.totalLength)}%`}\r\n                        strokeWidth={12}\r\n                        styles={buildStyles({\r\n                          pathColor: \"#59e8b5\",\r\n                          textColor: colors.UIColorGray60,\r\n                          trailColor: '#FF983A',\r\n                          backgroundColor: '#3e98c7',\r\n                        })}\r\n                    />\r\n                  </div>\r\n                  <ResultContainer>\r\n                    <ResultLefItem>\r\n                      <div style={{color: colors.mint500}}>Correct</div>\r\n                      <div style={{color: colors.sherbert500}}>Incorrect</div>\r\n                    </ResultLefItem>\r\n                    <ResultRightItem>\r\n                      <NumberOfAnswers isCorrect>{numberOfCorrectAnswers}</NumberOfAnswers>\r\n                      <NumberOfAnswers>{testSet.totalLength - numberOfCorrectAnswers}</NumberOfAnswers>\r\n                    </ResultRightItem>\r\n                  </ResultContainer>\r\n                </TopItemContentWrap>\r\n              </ContentItemContainer>\r\n              <ContentItemContainer>\r\n                <ContentItemHeader>Next steps</ContentItemHeader>\r\n                <SecondPartContent>\r\n                  <Link to={`/${id}/learn`} style={{textDecoration: \"none\"}}>\r\n                    <ReferenceItemContainer>\r\n                      <IconContainer>\r\n                        <IconContent img={learnModeIcon}/>\r\n                      </IconContainer>\r\n                      <RefMainContent>\r\n                        <RefMainHeader>Practise terms in Learn</RefMainHeader>\r\n                        <RefMainText>Learn these terms in a different way to build knowledge.</RefMainText>\r\n                      </RefMainContent>\r\n                    </ReferenceItemContainer>\r\n                  </Link>\r\n                  {testSet.totalLength - numberOfCorrectAnswers >= 5 &&\r\n                      <ReferenceItemContainer onClick={handleNewTestClick}>\r\n                          <IconContainer>\r\n                              <IconContent img={testModeIcon}/>\r\n                          </IconContainer>\r\n                          <RefMainContent>\r\n                              <RefMainHeader>Retest using missed terms</RefMainHeader>\r\n                              <RefMainText>Test yourself again on the terms you got wrong.</RefMainText>\r\n                          </RefMainContent>\r\n                      </ReferenceItemContainer>}\r\n                </SecondPartContent>\r\n              </ContentItemContainer>\r\n            </ContentContainer>\r\n          </ContentDivision>\r\n        </ContentWrap>\r\n      </Container>\r\n  )\r\n}\r\n\r\nexport default TestResultComponent","import styled from \"styled-components\";\r\nimport colors from \"../../../assets/colors\";\r\n\r\nexport const MainSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    @media (max-width: 38.75rem) {\r\n        grid-template-columns: 1fr;\r\n        grid-template-rows: auto auto;\r\n    }\r\n`\r\nexport const TermPart = styled.div`\r\n    border-right: 0.125rem solid ${colors.neurtal300};\r\n    padding-right: 1rem;\r\n    @media (max-width: 38.75rem){\r\n        border-bottom: 0.125rem solid ${colors.neurtal300};\r\n        border-right: none;\r\n        padding-bottom: 1rem;\r\n        padding-right: 0;\r\n    }\r\n`\r\nexport const DefinitionPart = styled.div`\r\n    padding-left: 1rem;\r\n    @media (max-width: 38.75rem){\r\n        padding-left: 0;\r\n        padding-top: 1rem;\r\n    }\r\n`\r\nexport const SecondTitle = styled.div`\r\n    color: ${colors.UIColorGray60};\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.5;\r\n`\r\nexport const AnswerContainer = styled.div`\r\n    display: grid;\r\n    gap: 1.5rem;\r\n    grid-template-columns: 1fr 1fr;\r\n    @media (max-width: 28.75rem) {\r\n        grid-template-columns: 1fr;\r\n        grid-template-rows: 1fr 1fr;\r\n    }\r\n`","import React from 'react'\r\nimport { FiX } from 'react-icons/fi';\r\nimport colors from '../../../assets/colors';\r\nimport AnswerItem from \"../../../layouts/answer-item.styles\";\r\nimport { AnswerContainer, SecondTitle } from './true-or-false.styles';\r\nimport { AiOutlineCheck } from \"react-icons/ai\";\r\nimport { trueFalseTest } from '../../../types/test-page.types';\r\n\r\ninterface Props {\r\n  testItem: trueFalseTest\r\n}\r\n\r\nconst CheckedPart: React.FC<Props> = ({ testItem }) => {\r\n\r\n  const {\r\n    isAnswered,\r\n    isTrue,\r\n    isCorrect,\r\n    definition\r\n  } = testItem;\r\n\r\n  // When question is skipped and answer is true\r\n  if (!isAnswered && isTrue) return <>\r\n    <SecondTitle color={colors.UIColorGray}>Give this one a go later!</SecondTitle>\r\n    <AnswerContainer>\r\n      <AnswerItem\r\n        tabIndex={0}\r\n        color={colors.UIColorGray60}\r\n        removeHover\r\n      >\r\n        <AiOutlineCheck style={{ color: colors.UIColorGray60, marginRight: \".625rem\" }} />\r\n        True\r\n      </AnswerItem>\r\n      <AnswerItem\r\n        tabIndex={0}\r\n        color={colors.colorDisabled}\r\n        removeHover\r\n        style={{color: colors.UIColorGray60}}\r\n      >\r\n        False\r\n      </AnswerItem>\r\n    </AnswerContainer>\r\n  </> \r\n\r\n  // When question is skipped and answer is false\r\n  if (!isAnswered && !isTrue) return <>\r\n    <SecondTitle>Give this one a go later!</SecondTitle>\r\n    <AnswerContainer>\r\n      <AnswerItem\r\n        tabIndex={0}\r\n        color={colors.colorDisabled}\r\n        removeHover\r\n        style={{color: colors.UIColorGray60}}\r\n      >\r\n        True\r\n      </AnswerItem>\r\n      <AnswerItem\r\n        tabIndex={0}\r\n        color={colors.UIColorGray60}\r\n        removeHover\r\n      >\r\n        <AiOutlineCheck style={{ color: colors.UIColorGray60, marginRight: \".625rem\" }} />\r\n        False\r\n      </AnswerItem>\r\n    </AnswerContainer>\r\n    <SecondTitle>Correct definition</SecondTitle>\r\n    <AnswerItem\r\n      tabIndex={0}\r\n      color={colors.green400}\r\n      bgColor={colors.green100}\r\n    >\r\n      <AiOutlineCheck style={{ color: colors.green400, marginRight: \".625rem\" }} />\r\n      {definition}\r\n    </AnswerItem>\r\n  </>\r\n\r\n  // When asnwer is true ans user answered correctly\r\n  if (isTrue && isCorrect) return <>\r\n    <SecondTitle style={{ color: colors.green400 }}>Awesome!</SecondTitle>\r\n    <AnswerContainer>\r\n      <AnswerItem\r\n        tabIndex={0}\r\n        color={colors.green400}\r\n        bgColor={colors.green100}\r\n        removeHover\r\n      >\r\n        <AiOutlineCheck style={{ color: colors.green400, marginRight: \".625rem\" }} />\r\n        True\r\n      </AnswerItem>\r\n      <AnswerItem\r\n        tabIndex={0}\r\n        color={colors.colorDisabled}\r\n        removeHover\r\n      >\r\n        False\r\n      </AnswerItem>\r\n    </AnswerContainer>\r\n  </>\r\n\r\n  // When asnwer is true and user answered incorrectly\r\n  if (isTrue && !isCorrect) return <>\r\n    <SecondTitle style={{ color: colors.coral300 }}>Not quite. You're still learning!</SecondTitle>\r\n    <AnswerContainer>\r\n      <AnswerItem\r\n        tabIndex={0}\r\n        color={colors.colorDisabled}\r\n        removeHover\r\n      >\r\n        True\r\n      </AnswerItem>\r\n      <AnswerItem\r\n        tabIndex={0}\r\n        color={colors.coral300}\r\n        removeHover\r\n      >\r\n        <FiX style={{ color: colors.coral300, marginRight: \".625rem\" }} />\r\n        False\r\n      </AnswerItem>\r\n    </AnswerContainer>\r\n  </>\r\n\r\n  // When answer is false and user answered correctly\r\n  if (!isTrue && isCorrect) return <>\r\n    <SecondTitle style={{ color: colors.green400 }}>Awesome!</SecondTitle>\r\n    <AnswerContainer>\r\n      <AnswerItem\r\n        tabIndex={0}\r\n        color={colors.colorDisabled}\r\n        removeHover\r\n      >\r\n        True\r\n      </AnswerItem>\r\n      <AnswerItem\r\n        tabIndex={0}\r\n        color={colors.green400}\r\n        bgColor={colors.green100}\r\n        removeHover\r\n      >\r\n        <AiOutlineCheck style={{ color: colors.green400, marginRight: \".625rem\" }} />\r\n        False\r\n      </AnswerItem>\r\n    </AnswerContainer>\r\n    <SecondTitle>Correct definition</SecondTitle>\r\n    <AnswerItem\r\n      tabIndex={0}\r\n      color={colors.green400}\r\n      bgColor={colors.green100}\r\n    >\r\n      <AiOutlineCheck style={{ color: colors.green400, marginRight: \".625rem\" }} />\r\n      {definition}\r\n    </AnswerItem>\r\n  </>\r\n  \r\n  // When answer is false and user answered incorrectly\r\n  return <>\r\n    <SecondTitle style={{ color: colors.coral300 }}>Not quite. You're still learning!</SecondTitle>\r\n    <AnswerContainer>\r\n      <AnswerItem\r\n        tabIndex={0}\r\n        color={colors.coral300}\r\n        removeHover\r\n      >\r\n        <FiX style={{ color: colors.coral300, marginRight: \".625rem\" }} />\r\n        True\r\n      </AnswerItem>\r\n      <AnswerItem\r\n        tabIndex={0}\r\n        color={colors.colorDisabled}\r\n        removeHover\r\n      >\r\n        False\r\n      </AnswerItem>\r\n    </AnswerContainer>\r\n    <SecondTitle>Correct definition</SecondTitle>\r\n    <AnswerItem\r\n      tabIndex={0}\r\n      color={colors.green400}\r\n      bgColor={colors.green100}\r\n    >\r\n      <AiOutlineCheck style={{ color: colors.green400, marginRight: \".625rem\" }} />\r\n      {definition}\r\n    </AnswerItem>\r\n  </>\r\n}\r\n\r\nexport default CheckedPart","import React, { FC, useState } from 'react'\r\nimport { testType } from '../../../types/test-page.types'\r\nimport AnswerItem from \"../../../layouts/answer-item.styles\";\r\nimport {\r\n  Container,\r\n  NumberContainer,\r\n  NumberContent,\r\n  TitleCenter,\r\n  TitleEnd,\r\n  TitleWrap,\r\n  WordTitle,\r\n  WordTitleContainer,\r\n  WordTitleWrap,\r\n  TopPart,\r\n  Word,\r\n  WordContainer,\r\n  WordHandler\r\n} from '../test-page.styles'\r\nimport CheckedPart from './checked-part'\r\nimport {\r\n  AnswerContainer,\r\n  DefinitionPart,\r\n  MainSection,\r\n  SecondTitle,\r\n  TermPart,\r\n} from './true-or-false.styles'\r\n\r\ninterface Props {\r\n  index: number,\r\n  testSet: testType,\r\n  setTestSet: (testSet: testType) => void,\r\n  reference: React.RefObject<HTMLDivElement>,\r\n  handleRefScroll: (id: number) => void,\r\n  isTestChecked: boolean\r\n}\r\n\r\nconst TrueOrFalse: FC<Props> = ({ testSet, index, setTestSet, reference, handleRefScroll, isTestChecked }) => {\r\n\r\n  const [focusValue, setFocusValue] = useState<string | null>(null);\r\n\r\n  const handleOnClick = (value: string) => {\r\n    let localFocusValue = focusValue === value ? null : value;\r\n    setFocusValue(localFocusValue);\r\n\r\n    let trueFalseItems = [...testSet.trueFalse];\r\n    let testItem = { ...testSet.trueFalse[index] };;\r\n    if (localFocusValue) {\r\n      testItem.isCorrect = testItem.isTrue.toString() === localFocusValue;\r\n      testItem.isAnswered = true;\r\n      handleRefScroll(index);\r\n    } else {\r\n      testItem.isCorrect = false;\r\n      testItem.isAnswered = false;\r\n    }\r\n    trueFalseItems[index] = testItem;\r\n    setTestSet({ ...testSet, trueFalse: trueFalseItems });\r\n  }\r\n\r\n  return (\r\n    <Container ref={reference} tabIndex={-1}>\r\n      <MainSection>\r\n        <TermPart>\r\n          <TopPart>\r\n            <WordTitleWrap>\r\n              <WordTitleContainer>\r\n                <TitleWrap>\r\n                  <WordTitle>Term</WordTitle>\r\n                </TitleWrap>\r\n                <TitleCenter />\r\n                <TitleEnd />\r\n              </WordTitleContainer>\r\n            </WordTitleWrap>\r\n            <WordContainer>\r\n              <WordHandler>\r\n                <Word>\r\n                  <div>{testSet.trueFalse[index].term}</div>\r\n                </Word>\r\n              </WordHandler>\r\n            </WordContainer>\r\n          </TopPart>\r\n        </TermPart>\r\n        <DefinitionPart>\r\n          <TopPart>\r\n            <WordTitleWrap>\r\n              <WordTitleContainer>\r\n                <TitleWrap>\r\n                  <WordTitle>Definition</WordTitle>\r\n                </TitleWrap>\r\n                <TitleCenter />\r\n                <TitleEnd />\r\n              </WordTitleContainer>\r\n            </WordTitleWrap>\r\n            <WordContainer>\r\n              <WordHandler>\r\n                <Word>\r\n                  <div>{testSet.trueFalse[index].incorrectAnswer ?\r\n                    testSet.trueFalse[index].incorrectAnswer?.definition :\r\n                    testSet.trueFalse[index].definition}</div>\r\n                </Word>\r\n              </WordHandler>\r\n            </WordContainer>\r\n          </TopPart>\r\n        </DefinitionPart>\r\n      </MainSection>\r\n      {!isTestChecked ? <>\r\n        <SecondTitle>Choose the answer</SecondTitle>\r\n        <AnswerContainer>\r\n          <AnswerItem\r\n            isFocus={focusValue === \"true\"}\r\n            onClick={() => handleOnClick(\"true\")}\r\n            tabIndex={0}\r\n          >\r\n            True\r\n          </AnswerItem>\r\n          <AnswerItem\r\n            isFocus={focusValue === \"false\"}\r\n            onClick={() => handleOnClick(\"false\")}\r\n            tabIndex={0}\r\n          >\r\n            False\r\n          </AnswerItem>\r\n        </AnswerContainer>\r\n      </> : <CheckedPart testItem={testSet.trueFalse[index]} />}\r\n      <NumberContainer>\r\n        <NumberContent>{(index + 1) + \" of \" + testSet.totalLength}</NumberContent>\r\n      </NumberContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default TrueOrFalse;","import styled from \"styled-components\";\r\nimport colors from \"../../../assets/colors\";\r\nimport {Container} from \"../test-page.styles\";\r\n\r\nexport const WrittenContainer = styled(Container)`\r\n    @media (max-width: 38.75em){\r\n        min-heigh: unset;\r\n    }\r\n`\r\nexport const BottomPart = styled.div`\r\n    -webkit-box-flex: 0;\r\n    -ms-flex-positive: 0;\r\n    -webkit-flex-grow: 0;\r\n    flex-grow: 0;\r\n    min-height: 10rem;\r\n    width: 100%;\r\n    z-index: 1;\r\n`\r\nexport const AnswerTitle = styled.div`\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    -webkit-box-pack: justify;\r\n    -ms-flex-pack: justify;\r\n    -webkit-align-items: center;\r\n    align-items: center;\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-justify-content: space-between;\r\n    justify-content: space-between;\r\n    margin-bottom: 1rem;\r\n`\r\nexport const AnswerTitleSection = styled.section`\r\n    -webkit-box-align: center;\r\n    -ms-flex-align: center;\r\n    -webkit-align-items: center;\r\n    align-items: center;\r\n    color: ${colors.UIColorGray60};\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    -webkit-letter-spacing: normal;\r\n    -moz-letter-spacing: normal;\r\n    -ms-letter-spacing: normal;\r\n    letter-spacing: normal;\r\n    line-height: 1.5;\r\n    @media (max-width: 38.75rem) {\r\n        padding-bottom: 1rem;\r\n    }\r\n    @media (max-width: 48rem) {\r\n        padding-bottom: 1rem;\r\n    }\r\n`\r\nexport const AnswerForm = styled.form`\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-direction: column;\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n`\r\nexport const InputContainer = styled.label`\r\n    -webkit-box-pack: center;\r\n    -ms-flex-pack: center;\r\n    background-color: ${colors.pageBackgroundColor};\r\n    border-radius: 0.5rem;\r\n    color: ${colors.gray600};\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-flex-direction: column;\r\n    -ms-flex-direction: column;\r\n    flex-direction: column;\r\n    height: 3rem;\r\n    -webkit-justify-content: center;\r\n    justify-content: center;\r\n    overflow: hidden;\r\n    padding: 0.25rem 1rem;\r\n    position: relative;\r\n    :after{\r\n    bottom: 0;\r\n    content: \" \";\r\n    height: 0.15rem;\r\n    left: 0;\r\n    position: absolute;\r\n    width: 100%;\r\n    }\r\n    :focus-within:after{\r\n        background-color: ${colors.textGray800};\r\n    }\r\n`\r\nexport const ButtonContainer = styled.div`\r\n    display: -webkit-box;\r\n    display: -webkit-flex;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -webkit-box-pack: end;\r\n    -ms-flex-pack: end;\r\n    -webkit-justify-content: flex-end;\r\n    justify-content: flex-end;\r\n    margin: 2rem 0 0;\r\n`","import React from 'react'\r\nimport { writtenTest } from '../../../types/test-page.types'\r\nimport { AnswerTitle, AnswerTitleSection } from './written.styles';\r\nimport colors from '../../../assets/colors';\r\nimport AnswerItem from \"../../../layouts/answer-item.styles\";\r\nimport { AiOutlineCheck } from 'react-icons/ai';\r\nimport { FiX } from 'react-icons/fi';\r\n\r\ninterface Props {\r\n    testItem: writtenTest\r\n}\r\n\r\nconst CheckedPart: React.FC<Props> = ({ testItem }) => {\r\n    const {\r\n        isCorrect,\r\n        term,\r\n        answer\r\n    } = testItem;\r\n\r\n    // When the question is skipped\r\n    if (!answer) return <>\r\n        <AnswerTitle>\r\n            <AnswerTitleSection>Give this one a go later!</AnswerTitleSection>\r\n        </AnswerTitle>\r\n        <AnswerItem\r\n            tabIndex={0}\r\n            color={colors.UIColorGray60}\r\n            removeHover\r\n        >\r\n            <FiX style={{ color: colors.UIColorGray60, marginRight: \".625rem\" }} />\r\n            Skipped\r\n        </AnswerItem>\r\n        <AnswerTitle style={{ marginTop: \"2rem\" }}>\r\n            <AnswerTitleSection>Correct answer</AnswerTitleSection>\r\n        </AnswerTitle>\r\n        <AnswerItem\r\n            tabIndex={0}\r\n            color={colors.green400}\r\n            bgColor={colors.green100}\r\n            removeHover\r\n        >\r\n            <AiOutlineCheck style={{ color: colors.green400, marginRight: \".625rem\" }} />\r\n            {term}\r\n        </AnswerItem>\r\n    </>\r\n    // When the asnwer is incorrect\r\n    if (!isCorrect) return <>\r\n        <AnswerTitle>\r\n            <AnswerTitleSection style={{ color: colors.coral300 }}>Not quite. You're still learning!</AnswerTitleSection>\r\n        </AnswerTitle>\r\n        <AnswerItem\r\n            tabIndex={0}\r\n            color={colors.coral300}\r\n            removeHover\r\n        >\r\n            <FiX style={{ color: colors.coral300, marginRight: \".625rem\" }} />\r\n            {answer}\r\n        </AnswerItem>\r\n        <AnswerTitle style={{ marginTop: \"2rem\" }}>\r\n            <AnswerTitleSection>Correct answer</AnswerTitleSection>\r\n        </AnswerTitle>\r\n        <AnswerItem\r\n            tabIndex={0}\r\n            color={colors.green400}\r\n            bgColor={colors.green100}\r\n            removeHover\r\n        >\r\n            <AiOutlineCheck style={{ color: colors.green400, marginRight: \".625rem\" }} />\r\n            {term}\r\n        </AnswerItem>\r\n    </>\r\n\r\n    // When the question is correct\r\n    return (\r\n        <>\r\n            <AnswerTitle>\r\n                <AnswerTitleSection>Awesome!</AnswerTitleSection>\r\n            </AnswerTitle>\r\n            <AnswerItem\r\n                tabIndex={0}\r\n                color={colors.green400}\r\n                bgColor={colors.green100}\r\n                style={{padding: \"1.5rem 1rem\"}}\r\n                removeHover\r\n            >\r\n                <AiOutlineCheck style={{ color: colors.green400, marginRight: \".625rem\" }} />\r\n                {answer}\r\n            </AnswerItem>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CheckedPart","import React, { useState } from 'react';\r\nimport { AssemblyInput } from '../../../components/AssemblyInput/assembly-input';\r\nimport BlueButton from \"../../../layouts/blue-button.styles\";\r\nimport { testType } from '../../../types/test-page.types';\r\nimport {\r\n  NumberContainer,\r\n  NumberContent,\r\n  TopPart,\r\n  TitleCenter,\r\n  TitleEnd,\r\n  TitleWrap,\r\n  WordTitle,\r\n  WordTitleContainer,\r\n  WordTitleWrap,\r\n  Word,\r\n  WordContainer,\r\n  WordHandler\r\n} from '../test-page.styles';\r\nimport CheckedPart from './checked-part';\r\nimport {\r\n  BottomPart,\r\n  WrittenContainer,\r\n  AnswerTitle,\r\n  AnswerTitleSection,\r\n  AnswerForm,\r\n  ButtonContainer,\r\n  InputContainer\r\n} from './written.styles';\r\n\r\ninterface Props {\r\n  index: number,\r\n  testSet: testType,\r\n  setTestSet: (testSet: testType) => void,\r\n  reference: React.RefObject<HTMLDivElement>,\r\n  handleRefScroll: (id: number) => void,\r\n  isTestChecked: boolean\r\n}\r\n\r\nconst Written: React.FC<Props> = ({ index, testSet, setTestSet, reference, handleRefScroll, isTestChecked }) => {\r\n\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputValue(event.target.value);\r\n    let writtenItems = [...testSet.written];\r\n    let writtenItem = { ...testSet.written[index] };\r\n    writtenItem.isCorrect = event.target.value === writtenItem.term;\r\n    writtenItem.answer = event.target.value;\r\n    writtenItems[index] = writtenItem;\r\n    setTestSet({ ...testSet, written: writtenItems });\r\n  }\r\n\r\n  const onClickHandler = (e: React.MouseEvent<HTMLElement>) => {\r\n    e.preventDefault();\r\n    handleRefScroll(testSet.lengths[0] + testSet.lengths[1] + 1 + index);\r\n  }\r\n\r\n  return (\r\n    <WrittenContainer ref={reference} tabIndex={-1}>\r\n      <div>\r\n        <TopPart>\r\n          <WordTitleWrap>\r\n            <WordTitleContainer>\r\n              <TitleWrap>\r\n                <WordTitle>Definition</WordTitle>\r\n              </TitleWrap>\r\n              <TitleCenter />\r\n              <TitleEnd />\r\n            </WordTitleContainer>\r\n          </WordTitleWrap>\r\n          <WordContainer>\r\n            <WordHandler>\r\n              <Word>\r\n                <div>{testSet.written[index].definition}</div>\r\n              </Word>\r\n            </WordHandler>\r\n          </WordContainer>\r\n        </TopPart>\r\n      </div>\r\n      <BottomPart>\r\n        {isTestChecked ? <CheckedPart testItem={testSet.written[index]} /> : <>\r\n          <AnswerTitle>\r\n            <AnswerTitleSection>Your answer</AnswerTitleSection>\r\n          </AnswerTitle>\r\n          <AnswerForm>\r\n            <div>\r\n              <InputContainer>\r\n                <AssemblyInput\r\n                  placeholder=\"Type the answer\"\r\n                  value={inputValue}\r\n                  onChange={handleChange}\r\n                />\r\n              </InputContainer>\r\n            </div>\r\n            {index + 1 !== testSet.lengths[3] && <ButtonContainer>\r\n              <BlueButton\r\n                padding={\"0.625rem 1rem\"}\r\n                radius={\".5rem\"}\r\n                fontSize={\".875rem\"}\r\n                onClick={onClickHandler}\r\n                type={\"submit\"}\r\n              >\r\n                Next\r\n              </BlueButton>\r\n            </ButtonContainer>}\r\n          </AnswerForm>\r\n        </>}\r\n      </BottomPart>\r\n      <NumberContainer>\r\n        <NumberContent>{(testSet.totalLength - testSet.lengths[3] + index + 1) + \" of \" + testSet.totalLength}</NumberContent>\r\n      </NumberContainer>\r\n    </WrittenContainer>\r\n  );\r\n};\r\n\r\nexport default Written;","import React, {useContext, useState} from 'react'\r\nimport {testType} from '../../types/test-page.types'\r\nimport Matching from './Matching/matching'\r\nimport MultipleChoice from './MultipleChoice/multiple-choice'\r\nimport SubmitSection from './SubmitSection/sumbit-section'\r\nimport {AnswersTitle, OtherSection, TrueFalseSection} from './test-page.styles'\r\nimport TestResultComponent from './TestResultComponent/test-result-component'\r\nimport TrueOrFalse from './TrueOrFalse/true-or-false'\r\nimport Written from './Written/written'\r\n\r\ninterface Props {\r\n  testSet: testType,\r\n  setTestSet: (testSet: testType) => void,\r\n  refsLength: number\r\n}\r\n\r\nconst PageContent: React.FC<Props> = ({testSet, setTestSet, refsLength}) => {\r\n\r\n  const [isTestChecked, setIsTestChecked] = useState(false);\r\n\r\n  const refs = Array(refsLength).fill(0)\r\n      .map(item => React.createRef<HTMLDivElement>())\r\n\r\n  const handleRefScroll = (id: number) => {\r\n    //@ts-ignore\r\n    refs[id + 1].current.scrollIntoView({\r\n      behavior: 'smooth',\r\n      block: 'center',\r\n    })\r\n  }\r\n\r\n  return (\r\n      <>\r\n        {isTestChecked &&\r\n            <TestResultComponent\r\n                testSet={testSet}\r\n                setTestSet={setTestSet}\r\n                setIsTestChecked={setIsTestChecked}\r\n            />}\r\n        <TrueFalseSection>\r\n          {isTestChecked && <AnswersTitle>Your answers</AnswersTitle>}\r\n          {testSet.trueFalse.map((item, index) => {\r\n            return <TrueOrFalse\r\n                key={item.id}\r\n                testSet={testSet}\r\n                index={index}\r\n                setTestSet={setTestSet}\r\n                reference={refs[index]}\r\n                handleRefScroll={handleRefScroll}\r\n                isTestChecked={isTestChecked}\r\n            />\r\n          })}\r\n        </TrueFalseSection>\r\n        <OtherSection>\r\n          {testSet.multipleChoice.map((item, index) => {\r\n            return <MultipleChoice\r\n                key={item.id}\r\n                testSet={testSet}\r\n                index={index}\r\n                setTestSet={setTestSet}\r\n                reference={refs[testSet.lengths[0] + index]}\r\n                handleRefScroll={handleRefScroll}\r\n                isTestChecked={isTestChecked}\r\n            />\r\n          })}\r\n        </OtherSection>\r\n        <OtherSection>\r\n          <Matching\r\n              testSet={testSet}\r\n              setTestSet={setTestSet}\r\n              reference={refs[testSet.lengths[0] + testSet.lengths[1]]}\r\n              handleRefScroll={handleRefScroll}\r\n              isTestChecked={isTestChecked}\r\n          />\r\n        </OtherSection>\r\n        <OtherSection>\r\n          {testSet.written.map((item, index) => {\r\n            return <Written\r\n                key={item.id}\r\n                testSet={testSet}\r\n                index={index}\r\n                setTestSet={setTestSet}\r\n                reference={refs[testSet.lengths[0] + testSet.lengths[1] + 1 + index]}\r\n                handleRefScroll={handleRefScroll}\r\n                isTestChecked={isTestChecked}\r\n            />\r\n          })}\r\n        </OtherSection>\r\n        {!isTestChecked && <SubmitSection setIsTestChecked={setIsTestChecked}/>}\r\n      </>\r\n  )\r\n}\r\n\r\nexport default PageContent","import {testType} from \"../types/test-page.types\";\r\nimport {useContext, useEffect} from \"react\";\r\nimport AuthContext from \"../context/auth-context\";\r\n\r\n// calculates progress bar width for Test Page\r\nfunction useProgressBarLength(testSet: testType | null) {\r\n\r\n  const {setProgressBarWidth} = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    if (testSet) {\r\n      const answers = [\r\n        ...testSet.trueFalse.map(item => item.isAnswered),\r\n        ...testSet.multipleChoice.map(item => !!item.answer),\r\n        ...testSet.matching.items.map(item => !!item.answer),\r\n        ...testSet.written.map(item => !!item.answer)\r\n      ]\r\n      const total = answers.length;\r\n      const progress = answers.filter(item => item).length;\r\n      setProgressBarWidth(progress * 100 / total);\r\n    }\r\n  }, [testSet])\r\n}\r\nexport default useProgressBarLength;","import React, {useEffect, useState} from 'react';\r\nimport LoadingSpinner from \"../../components/LoadingSpinner/loading-spinner\";\r\nimport generateTest from './test-generator';\r\nimport {testType} from '../../types/test-page.types';\r\nimport {\r\n  PageContainer,\r\n  PageContentWrap,\r\n  PageWrapper,\r\n} from './test-page.styles';\r\nimport PageContent from './page-content';\r\nimport useProgressBarLength from \"../../hooks/useProgressBarLength\";\r\nimport useGetStudySets from \"../../hooks/useGetStudySets\";\r\n\r\n\r\nconst TestPage = () => {\r\n\r\n  const [testSet, setTestSet] = useState<testType | null>(null);\r\n  const [studySet, setStudySet] = useGetStudySets();\r\n  useProgressBarLength(testSet);\r\n\r\n  useEffect(() => {\r\n    if (studySet) setTestSet(generateTest([...studySet.terms]));\r\n  }, [studySet])\r\n\r\n  return (\r\n      <>\r\n        {testSet ?\r\n            <PageContainer>\r\n              <PageWrapper>\r\n                <PageContentWrap>\r\n                  <PageContent\r\n                      testSet={testSet}\r\n                      setTestSet={setTestSet}\r\n                      refsLength={testSet.lengths[0] + testSet.lengths[1] + testSet.lengths[3] + 1}\r\n                  />\r\n                </PageContentWrap>\r\n              </PageWrapper>\r\n            </PageContainer>\r\n            : <LoadingSpinner/>}\r\n      </>\r\n  );\r\n};\r\n\r\nexport default TestPage;"],"names":["AssemblyInput","styled","colors","getWindowDimensions","window","width","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","AnswerItem","props","color","bgColor","removeHover","isFocus","terms","writtenTerms","termsClone","selectedTerms","sort","Math","random","slice","selectRandomTerms","selectedTermsLength","length","multipleChoiceTerms","splice","trueFalseTerms","incorrectAnswers","filter","item","trueFalseItem","id","incorrectMultipleAnswers","mChouseItem","matchingTerms","trueFalseItems","map","randomNumber","floor","incorrectAnswer","isTrue","isCorrect","isAnswered","multipleChoiseItems","possibleAnswers","i","push","answer","matchingItems","matchingTest","items","answers","index","term","writtenItems","lengths","trueFalse","multipleChoice","matching","written","totalLength","reduce","partialSum","a","PageContainer","Container","PageWrapper","PageContentWrap","TrueFalseSection","OtherSection","NumberContainer","NumberContent","TopPart","WordTitleWrap","WordTitleContainer","WordContainer","WordHandler","Word","TitleWrap","TitleCenter","TitleEnd","WordTitle","AnswersTitle","TestItemContainer","TestItemHeaderContainer","TestItemHeaderWrap","TextFormater","TestItemMessage","textColor","AnswerContainer","testItem","definition","tabIndex","style","marginRight","TextContainer","TextWrap","DefaultAnswerBox","InactiveAnswerBox","ActiveAnswerBox","ActiveAnswerBoxWithMessage","ActiveBoxMessage","RemoveIconContainer","AnsweredBoxContent","answerBox","focusedItem","isNoAnswers","setFocusedItem","testSet","setTestSet","onClickHandler","removeClickHandler","onClick","cursor","ComponentTitle","ComponentHeader","DefinitionsPart","AnswersPart","AnswerItemContainer","isTaken","AnswerItemWrap","AnswerItemContent","reference","handleRefScroll","isTestChecked","checkIfAnswerTaken","includes","ref","areAllAnswered","every","answerItemOnClickHandler","firstMatchingNumber","calculateOrderNumber","AsnwerTitleContainer","undefined","focusValue","setFocusValue","marginTop","value","localFocusValue","multipleChoiceItems","toggleFocus","BackgroundImage","submitTestBg","H3","setIsTestChecked","setProgressBarWidth","useContext","AuthContext","padding","radius","fontSize","scrollTo","top","left","behavior","ContentWrap","ContentDivision","ContentContainer","ContentItemContainer","ContentItemHeader","TopItemContentWrap","ResultContainer","ResultLefItem","ResultRightItem","NumberOfAnswers","SecondPartContent","ReferenceItemContainer","IconContainer","IconContent","img","RefMainContent","RefMainHeader","RefMainText","Path","_a","className","counterClockwise","dashRatio","pathRadius","strokeWidth","React.createElement","Object","assign","getDashStyle","d","getPathDescription","fillOpacity","rotation","diameter","PI","gapLength","strokeDasharray","strokeDashoffset","__extends","CircularProgressbar","this","background","backgroundPadding","getBackgroundPadding","minValue","maxValue","min","max","circleRatio","classes","styles","text","getPathRadius","pathRatio","getPathRatio","root","viewBox","cx","cy","r","trail","path","x","y","React.Component","buildStyles","strokeLinecap","textSize","pathColor","pathTransition","pathTransitionDuration","trailColor","backgroundColor","rotationTransform","rotationTransformOrigin","removeUndefinedValues","stroke","transform","transformOrigin","transition","transitionDuration","fill","obj","keys","forEach","key","useParams","numberOfCorrectAnswers","setNumberOfCorrectAnswers","narrowToTermObject","isMarked","countCorrectAnswers","round","to","textDecoration","learnModeIcon","testSetIncorrectAnswers","generateTest","testModeIcon","MainSection","TermPart","DefinitionPart","SecondTitle","handleOnClick","toString","WrittenContainer","BottomPart","AnswerTitle","AnswerTitleSection","AnswerForm","InputContainer","ButtonContainer","inputValue","setInputValue","placeholder","onChange","event","target","writtenItem","e","preventDefault","type","refsLength","refs","Array","React","current","scrollIntoView","block","total","progress","useGetStudySets","studySet","useProgressBarLength"],"sourceRoot":""}